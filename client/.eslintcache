[{"C:\\Users\\MAYA\\PERN\\client\\src\\index.js":"1","C:\\Users\\MAYA\\PERN\\client\\src\\App.js":"2","C:\\Users\\MAYA\\PERN\\client\\src\\components\\AppRouter.js":"3","C:\\Users\\MAYA\\PERN\\client\\src\\routes.js":"4","C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Admin.js":"5","C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Shop.js":"6","C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Basket.js":"7","C:\\Users\\MAYA\\PERN\\client\\src\\utils\\consts.js":"8","C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Auth.js":"9","C:\\Users\\MAYA\\PERN\\client\\src\\pages\\DevicePage.js":"10","C:\\Users\\MAYA\\PERN\\client\\src\\store\\UserStore.js":"11","C:\\Users\\MAYA\\PERN\\client\\src\\store\\DeviceStore.js":"12","C:\\Users\\MAYA\\PERN\\client\\src\\components\\NavBar.js":"13","C:\\Users\\MAYA\\PERN\\client\\src\\components\\TypeBar.js":"14","C:\\Users\\MAYA\\PERN\\client\\src\\components\\BrandBar.js":"15","C:\\Users\\MAYA\\PERN\\client\\src\\components\\DeviceList.js":"16","C:\\Users\\MAYA\\PERN\\client\\src\\components\\DeviceItem.js":"17","C:\\Users\\MAYA\\PERN\\client\\src\\components\\modals\\createType.js":"18","C:\\Users\\MAYA\\PERN\\client\\src\\components\\modals\\createBrand.js":"19","C:\\Users\\MAYA\\PERN\\client\\src\\components\\modals\\createDevice.js":"20","C:\\Users\\MAYA\\PERN\\client\\src\\http\\userAPI.js":"21","C:\\Users\\MAYA\\PERN\\client\\src\\http\\index.js":"22","C:\\Users\\MAYA\\PERN\\client\\src\\http\\deviceAPI.js":"23","C:\\Users\\MAYA\\PERN\\client\\src\\components\\Pages.js":"24","C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Main.js":"25","C:\\Users\\MAYA\\PERN\\client\\src\\components\\Slider\\Slider.js":"26","C:\\Users\\MAYA\\PERN\\client\\src\\components\\Slider\\slider.styles.js":"27","C:\\Users\\MAYA\\PERN\\client\\src\\components\\Slider\\Arrows.js":"28","C:\\Users\\MAYA\\PERN\\client\\src\\components\\Slider\\MediaBreakpointsMixin.js":"29"},{"size":432,"mtime":1634577903900,"results":"30","hashOfConfig":"31"},{"size":947,"mtime":1636751460586,"results":"32","hashOfConfig":"31"},{"size":985,"mtime":1636751460622,"results":"33","hashOfConfig":"31"},{"size":893,"mtime":1636751460873,"results":"34","hashOfConfig":"31"},{"size":1707,"mtime":1635251649401,"results":"35","hashOfConfig":"31"},{"size":8894,"mtime":1636751460857,"results":"36","hashOfConfig":"31"},{"size":3436,"mtime":1637076032003,"results":"37","hashOfConfig":"31"},{"size":276,"mtime":1636751460888,"results":"38","hashOfConfig":"31"},{"size":3441,"mtime":1636751460810,"results":"39","hashOfConfig":"31"},{"size":4976,"mtime":1637076985144,"results":"40","hashOfConfig":"31"},{"size":838,"mtime":1635098787894,"results":"41","hashOfConfig":"31"},{"size":2970,"mtime":1636751460873,"results":"42","hashOfConfig":"31"},{"size":4134,"mtime":1636920882953,"results":"43","hashOfConfig":"31"},{"size":1928,"mtime":1636751460716,"results":"44","hashOfConfig":"31"},{"size":1904,"mtime":1636751460624,"results":"45","hashOfConfig":"31"},{"size":646,"mtime":1635321006641,"results":"46","hashOfConfig":"31"},{"size":2582,"mtime":1637076992184,"results":"47","hashOfConfig":"31"},{"size":1397,"mtime":1635106497228,"results":"48","hashOfConfig":"31"},{"size":1502,"mtime":1635252543110,"results":"49","hashOfConfig":"31"},{"size":6683,"mtime":1636751460747,"results":"50","hashOfConfig":"31"},{"size":713,"mtime":1635097010132,"results":"51","hashOfConfig":"31"},{"size":569,"mtime":1637076154892,"results":"52","hashOfConfig":"31"},{"size":2028,"mtime":1636751460771,"results":"53","hashOfConfig":"31"},{"size":5323,"mtime":1636751460673,"results":"54","hashOfConfig":"31"},{"size":1837,"mtime":1636751460841,"results":"55","hashOfConfig":"31"},{"size":2858,"mtime":1637076149171,"results":"56","hashOfConfig":"31"},{"size":2316,"mtime":1636751460685,"results":"57","hashOfConfig":"31"},{"size":3200,"mtime":1636751460682,"results":"58","hashOfConfig":"31"},{"size":496,"mtime":1636751460685,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qnii4x",{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\MAYA\\PERN\\client\\src\\index.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\App.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\AppRouter.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\routes.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Admin.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Shop.js",["125","126","127","128"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Card, Container, Row, Col, Spinner } from \"react-bootstrap\";\r\nimport TypeBar from \"../components/TypeBar\";\r\nimport BrandBar from \"../components/BrandBar\";\r\nimport DeviceList from \"../components/DeviceList\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Context } from \"../index\";\r\nimport { fetchBrands, fetchDevices, fetchTypes } from \"../http/deviceAPI\";\r\nimport Pages from \"../components/Pages\";\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n// import { set } from 'mobx';\r\n\r\n\r\nconst Shop = observer( () =>\r\n{\r\n    const [loading, setLoading] = useState(true)\r\n   \r\n\r\n    const { device } = useContext( Context )\r\n    const history = useHistory()\r\n\r\n\r\n    const location = useLocation()\r\n    const path = location.search\r\n\r\n    let type = \"\";\r\n    let brand = \"\";\r\n    let sort = \"\";\r\n\r\n    // console.log( \"TCL: path\", path )\r\n\r\n    const queryString = require( \"query-string\" )\r\n    const parsed = queryString.parse( path )\r\n    console.log( \"TCL: parsed.types\", parsed.types )\r\n\r\n    let parsedTypes\r\n    parsed.types ? parsedTypes = +parsed.types : parsedTypes = null\r\n    let parsedBrands\r\n    parsed.brands ? parsedBrands = +parsed.brands : parsedBrands = null\r\n    let parsedSort\r\n    parsed.sort ? parsedSort = parsed.sort : parsedSort = ''\r\n    console.log(\"TCL: parsed.sort\", parsed.sort)\r\n  \r\n\r\n    let shopUrl = undefined;//переход по урл /shop\r\n    let linked = undefined;//переход по урл querystring\r\n\r\n    path && ( path.length > 16 ) ? linked = 1 : linked = undefined\r\n\r\n    !path ? shopUrl = 1 : shopUrl = undefined\r\n\r\n    const [ chosen, setChosen ] = useState( false )\r\n\r\n\r\n\r\n\r\n    //отрабатывает один раз при переходе по url или на /shop\r\n    useEffect( () =>\r\n    {\r\n        if ( linked === 1 )//загрузка по строке\r\n        {\r\n\r\n\r\n            fetchTypes().then( data =>\r\n            {\r\n                device.setTypes( data )\r\n                device.setSelectedType( { id: parsedTypes } )\r\n            } )\r\n\r\n            fetchBrands( parsedTypes ).then( data =>\r\n            {\r\n                device.setBrands( data )\r\n                device.setSelectedBrand( { id: parsedBrands } )\r\n                device.setSort( parsedSort )\r\n            } )\r\n\r\n            fetchDevices( parsedTypes, parsedBrands, parsed.page, parsed.limit, parsedSort ).then( data =>\r\n            {\r\n                device.setDevices( data.rows )\r\n                device.setTotalCount( data.count )\r\n                // device.setSort( parsedSort )\r\n            } ).finally(() => setLoading(false))\r\n         \r\n            console.log( 'device по строке:', device )\r\n        }\r\n\r\n\r\n        else if ( shopUrl === 1 ) //загрузка первичная /shop все товары \r\n        {\r\n            fetchTypes().then( data => device.setTypes( data ) )\r\n\r\n            fetchBrands().then( data => device.setBrands( data ) )\r\n\r\n            fetchDevices( null, null, device.page, device.limit, device.sort ).then( data =>\r\n            {\r\n                device.setDevices( data.rows )\r\n                device.setTotalCount( data.count )\r\n            } ).finally(() => setLoading(false))\r\n            console.log( 'device без фильтров:', device )\r\n        }\r\n    }, [] )\r\n\r\n    //пока аcинхронно грузятся отфильтрованые товары успевает второй useEffect отработать создать пустую строку\r\n\r\n    // useEffect для фильтров\r\n\r\n    useEffect( () =>\r\n    {\r\n\r\n       \r\n\r\n        fetchBrands( device.selectedType.id ).then( data =>\r\n        {\r\n            device.setBrands( data )\r\n\r\n            console.log( \"fetch brands2\" )\r\n\r\n        } )\r\n        fetchDevices( device.selectedType.id, device.selectedBrand.id, device.page, device.limit, device.sort ).then( data =>\r\n        {\r\n            device.setDevices( data.rows )\r\n            device.setTotalCount( data.count )\r\n            \r\n            device.selectedType.id ? type = `types=${ device.selectedType.id }` : type = ''\r\n           \r\n            device.selectedBrand.id ? brand = `&brands=${ device.selectedBrand.id }` : brand = ''\r\n          \r\n            device.sort ? ( sort = `&sort=${ device.sort }` ) : sort = ''\r\n          \r\n    \r\n            let query = `${ type }${ brand }&page=${ device.page }&limit=${ device.limit }${ sort }`;\r\n    \r\n            console.log( \"TCL: query\", query )\r\n    \r\n            history.push( `/shop/?${ query }` )\r\n\r\n\r\n\r\n            console.log( \"TCL: device с фильтрами\", device );\r\n        } ).finally(() => setLoading(false))\r\n\r\n\r\n        // }\r\n    }, [ device.selectedType, device.selectedBrand, device.sort, device.page ] )\r\n\r\n\r\n    //если нет этого бренда в категории, а он был активен удалить из строки или сбросить из селектед\r\n    //сделать чтобы отображались только категории которые в этом бренде?\r\n\r\n\r\n    if (loading) {\r\n        return <Spinner animation={\"border\"} variant=\"secondary\"/>\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"mt-3\">\r\n                <Col md={ 3 }>\r\n                    <TypeBar seltype={ parsed.type } />\r\n                </Col>\r\n                <Col md={ 9 }>\r\n                    <BrandBar />\r\n                    <div className='d-flex justify-content-end'>\r\n                        <Pages />\r\n                        <div className='d-flex align-items-center ml-5'>\r\n                            <Card\r\n                                className='p-1 flex-row'\r\n                                style={ { cursor: 'pointer', height: '2.5rem' } }\r\n                                border={ 'DESC' === device.sort ? 'dark' : 'light' }\r\n                            >\r\n                                { chosen === false ?\r\n                                    <div style={ { width: '100%', height: '100%' } }\r\n                                        onClick={ () => { setChosen( true ); device.setSort( 'DESC' ) } }\r\n                                    >{['- ', <span>&#8372;</span>]}\r\n                                    </div>\r\n                                    :\r\n                                    ( 'DESC' === device.sort ) ? (\r\n                                        <div style={ { width: '100%', height: '100%' } }\r\n                                            onClick={ () => { setChosen( false ); device.setSort( '' ) } }\r\n                                        >{['- ', <span>&#8372;</span>]}\r\n                                        </div> )\r\n                                        :\r\n                                        ( <div style={ { width: '100%', height: '100%' } }\r\n                                            onClick={ () => { setChosen( true ); device.setSort( 'DESC' ) } }\r\n                                        > {['- ', <span>&#8372;</span>]}\r\n                                        </div> )\r\n                                }\r\n                            </Card>\r\n                            <Card\r\n                                className='p-1 flex-row'\r\n                                style={ { cursor: 'pointer', height: '2.5rem' } }\r\n                                border={ 'ASC' === device.sort ? 'dark' : 'light' }\r\n                            >\r\n                                { chosen === false ?\r\n                                    <div style={ { width: '100%', height: '100%' } }\r\n                                        onClick={ () => { setChosen( true ); device.setSort( 'ASC' ) } }\r\n                                    >{['+ ', <span>&#8372;</span>]}\r\n                                    </div>\r\n                                    :\r\n                                    ( 'ASC' === device.sort ) ? (\r\n                                        <div style={ { width: '100%', height: '100%' } }\r\n                                            onClick={ () => { setChosen( false ); device.setSort( '' ) } }\r\n                                        >{['+ ', <span>&#8372;</span>]}\r\n                                        </div> )\r\n                                        :\r\n                                        ( <div style={ { width: '100%', height: '100%' } }\r\n                                            onClick={ () => { setChosen( true ); device.setSort( 'ASC' ) } }\r\n                                        >{['+ ', <span>&#8372;</span>]}\r\n                                        </div> )\r\n                                }\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                    <DeviceList />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n} )\r\n\r\nexport default Shop;","C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Basket.js",["129","130"],"import React, { useEffect } from 'react';\r\nimport { useContext } from 'react';\r\nimport { Context } from '..';\r\nimport { deleteFromBasket, getBasket } from '../http/deviceAPI';\r\n\r\nimport { Button, Card, Col, Container, Row } from 'react-bootstrap'\r\nimport { observer } from 'mobx-react-lite';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n// import close from '../assets/close.svg'\r\n\r\nconst Basket = observer( () =>\r\n{\r\n    const { device } = useContext( Context )\r\n\r\n    console.log( \"TCL: device\", device )\r\n\r\n    useEffect( () =>\r\n    {\r\n        getBasket().then( data => device.setBaskets( data ) )\r\n    }, [ device ] )\r\n\r\n    useEffect( () =>\r\n    {\r\n\r\n        if ( device.selectedBasket !== null )\r\n        {\r\n            deleteFromBasket( device.selectedBasket ).then( data =>\r\n            {\r\n                device.setSelectedBasket( null )\r\n            } )\r\n        }\r\n\r\n        getBasket().then( data => device.setBaskets( data ) )\r\n\r\n    }, [ device.selectedBasket ] )\r\n\r\n\r\n\r\n\r\n    //Считаем общую сумму, которую юзер набрал в корзину\r\n\r\n\r\n\r\n    let prices = 0;\r\n    {\r\n        ( device.basket.length > 0 ) && ( device.basket.map( price =>\r\n            prices += Number( price.device.price )\r\n        ) )\r\n    }\r\n    return (\r\n        <Container\r\n            className=\"d-flex flex-column justify-content-center align-items-center mt-3\"\r\n        >\r\n            <h1 className=\"p-4\">Корзина</h1>\r\n\r\n            { ( device.basket.length > 0 ) && ( device.basket.map( product =>\r\n\r\n                <Card\r\n                    className=\"d-flex w-100 p-2 justify-content-center mb-2\" key={ product.id }\r\n                    style={ { borderBottom: '1px solid grey' } }\r\n                >\r\n                    <Row className=\"d-flex \">\r\n                        <Col md={ 3 }>\r\n                            <img src={ product.device.img } alt={ 'device' } height={ 60 } />\r\n                        </Col>\r\n                        <Col md={ 6 }>\r\n                            <div className=\"d-flex h-100 flex-row justify-content-start align-items-center\">\r\n                                <NavLink to={ `/device/${ product.device.id }` } >\r\n                                    <div className=\"pl-3\">{ product.device.name }</div>\r\n                                </NavLink>\r\n                            </div>\r\n                        </Col>\r\n                        <Col md={ 3 }>\r\n                            <div className=\"d-flex h-100 flex-row justify-content-between align-items-center\">\r\n                                <Button\r\n                                    variant={ 'outline-dark' }\r\n                                    onClick={ () => device.setSelectedBasket( Number( product.id ) ) }\r\n                                >удалить\r\n                                </Button> <h4 className=\"font-weight-light\">{ product.device.price } грн</h4>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Card>\r\n\r\n            ) ) }\r\n\r\n            <Card className=\"d-flex flex-row  p-2 justify-content-between align-items-center mb-2 align-self-end\">\r\n                <h3 className=\"pr-2\">Итого:&nbsp; </h3>\r\n                <h4 className=\"pl-2\"> &nbsp;{ prices } <span className=\"font-weight-normal pl-2\"> грн</span></h4>\r\n            </Card>\r\n        </Container >\r\n    )\r\n} )\r\nexport default Basket","C:\\Users\\MAYA\\PERN\\client\\src\\utils\\consts.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Auth.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\pages\\DevicePage.js",["131","132"],"C:\\Users\\MAYA\\PERN\\client\\src\\store\\UserStore.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\store\\DeviceStore.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\NavBar.js",["133","134"],"import React, { useContext } from 'react';\r\nimport { Context } from \"../index\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// import { ADMIN_ROUTE, LOGIN_ROUTE, SHOP_ROUTE } from \"../utils/consts\";\r\nimport { ADMIN_ROUTE, BASKET_ROUTE, LOGIN_ROUTE, SHOP_ROUTE } from \"../utils/consts\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport login5 from '../assets/login5.png'\r\nimport basket5 from '../assets/basket5.png'\r\nimport logout5 from '../assets/logout5.png'\r\nimport admin5 from '../assets/admin5.png'\r\n\r\n\r\nconst NavBar = observer( () =>\r\n{\r\n    const { user } = useContext( Context )\r\n    const history = useHistory()\r\n\r\n    const logOut = () =>\r\n    {\r\n        user.setUser( {} )\r\n        user.setIsAuth( false )\r\n    }\r\n\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" expand=\"lg\">\r\n            <Container>\r\n                <NavLink style={ { color: 'white', textDecoration: 'none', fontSize: '40px' } } to={ '/' }>Idevice</NavLink>\r\n                <div className='d-flex flex-row flex-no-wrap justify-content-between'>\r\n                    <div className='mr-3'>\r\n                        { user.isAuth ?\r\n                            <Nav className='flex-row'\r\n\r\n                                style={ { maxHeight: '100px', color: 'white' } }\r\n                            >\r\n                                <div\r\n                                    style={ { backgroundImage: `url(${ admin5 })`, backgroundRepeat: 'no-repeat', backgroundPosition: 'center center', width: 30, height: 30, backgroundSize: 'cover', color: 'white', cursor: 'pointer', marginRight: '20px' } }\r\n                                    variant={ 'outline-light' }\r\n                                    onClick={ () => history.push( ADMIN_ROUTE ) }\r\n                                >\r\n                                </div>\r\n                                <div\r\n                                    style={ { backgroundImage: `url(${ logout5 })`, backgroundRepeat: 'no-repeat', backgroundPosition: 'center center', width: 30, height: 30, backgroundSize: 'cover', color: 'white', cursor: 'pointer', marginRight: '20px' } }\r\n                                    variant={ 'outline-light' }\r\n                                    onClick={ () => logOut() }\r\n                                    className=\"ml-2\"\r\n                                >\r\n                                </div>\r\n                            </Nav>\r\n                            :\r\n                            <Nav\r\n\r\n                                style={ { maxHeight: '100px', color: 'white' } }\r\n                            >\r\n                                <div\r\n                                    style={ { backgroundImage: `url(${ login5 })`, backgroundRepeat: 'no-repeat', backgroundPosition: 'center center', width: 37, height: 34, backgroundSize: 'cover', color: 'white', cursor: 'pointer', marginRight: '20px', position: 'relative', bottom: '4px' } }\r\n                                    variant={ 'outline-light' }\r\n                                    onClick={ () => history.push( LOGIN_ROUTE ) }\r\n                                >\r\n                                </div>\r\n                            </Nav>\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        <Nav>\r\n                            <div\r\n                                style={ { background: `url(${ basket5 }) no-repeat center center`, width: 30, height: 35, backgroundSize: 'cover', color: 'white', cursor: 'pointer', position: 'relative', bottom: '4.5px' } }\r\n                                className=\"mr-2\"\r\n                                onClick={ () => history.push( BASKET_ROUTE ) }\r\n                            >\r\n\r\n                            </div>\r\n                        </Nav>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n} );\r\n\r\nexport default NavBar;","C:\\Users\\MAYA\\PERN\\client\\src\\components\\TypeBar.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\BrandBar.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\DeviceList.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\DeviceItem.js",["135"],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\modals\\createType.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\modals\\createBrand.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\modals\\createDevice.js",["136","137"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Button, Dropdown, Form, Row, Col } from \"react-bootstrap\";\r\nimport { Context } from \"../../index\";\r\nimport { createDevice, fetchBrands, fetchDevices, fetchTypes } from \"../../http/deviceAPI\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst CreateDevice = observer( ( { show, onHide } ) =>\r\n{\r\n    const { device } = useContext( Context )\r\n    const [ name, setName ] = useState( '' )\r\n    const [ price, setPrice ] = useState( 0 )\r\n    const [ file, setFile ] = useState( null )\r\n    const [ info, setInfo ] = useState( [] )\r\n\r\n    useEffect( () =>\r\n    {\r\n        fetchTypes().then( data => device.setTypes( data ) )\r\n        fetchBrands().then( data => device.setBrands( data ) )\r\n    }, [ show ] )//[show] обновляем бренды и типы при их добавлении перед товаром\r\n\r\n    const addInfo = () =>\r\n    {\r\n        setInfo( [ ...info, { title: '', description: '', number: Date.now() } ] )\r\n    }\r\n    const removeInfo = ( number ) =>\r\n    {\r\n        setInfo( info.filter( i => i.number !== number ) )\r\n    }\r\n    const changeInfo = ( key, value, number ) =>\r\n    {\r\n        setInfo( info.map( i => i.number === number ? { ...i, [ key ]: value } : i ) )\r\n    }\r\n\r\n    const selectFile = e =>\r\n    {\r\n        setFile( e.target.files[ 0 ] )\r\n    }\r\n\r\n    const addDevice = () =>\r\n    {\r\n        console.log( 'info', info )\r\n        const formData = new FormData()  \r\n        try\r\n        {\r\n            formData.append( 'name', name )\r\n            formData.append( 'price', `${ price }` )\r\n            formData.append( 'img', file )\r\n            formData.append( 'brandId', device.selectedBrand.id )\r\n            formData.append( 'typeId', device.selectedType.id )\r\n            formData.append( 'info', JSON.stringify( info ) )            \r\n            createDevice( formData ).then( data => onHide() )\r\n        } catch ( error )\r\n        {\r\n            alert( error )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={ show }\r\n            onHide={ onHide }\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Добавить устройство\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{ device.selectedType.name || \"Выберите тип\" }</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            { device.types.map( type =>\r\n                                <Dropdown.Item\r\n                                    onClick={ () => device.setSelectedType( type ) }\r\n                                    key={ type.id }\r\n                                >\r\n                                    { type.name }\r\n                                </Dropdown.Item>\r\n                            ) }\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{ device.selectedBrand.name || \"Выберите бренд\" }</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            { device.brands.map( brand =>\r\n                                <Dropdown.Item\r\n                                    onClick={ () => device.setSelectedBrand( brand ) }\r\n                                    key={ brand.id }\r\n                                >\r\n                                    { brand.name }\r\n                                </Dropdown.Item>\r\n                            ) }\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Form.Control\r\n                        value={ name }\r\n                        onChange={ e => setName( e.target.value ) }\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите название\"\r\n                    />\r\n                    <Form.Control\r\n                        value={ price }\r\n                        onChange={ e => setPrice( Number( e.target.value ) ) }\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите цену\"\r\n                    // type=\"number\"\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        type=\"file\"\r\n                        onChange={ selectFile }\r\n                    />\r\n                    <hr />\r\n                    <Button\r\n                        variant={ \"outline-dark\" }\r\n                        onClick={ addInfo }\r\n                    >\r\n                        Добавить новое свойство\r\n                    </Button>\r\n                    { info.map( i =>\r\n                        <Row className=\"mt-4\" key={ i.number }>\r\n                            <Col md={ 4 }>\r\n                                <Form.Control\r\n                                    value={ i.title }\r\n                                    onChange={ ( e ) => changeInfo( 'title', e.target.value, i.number ) }\r\n                                    placeholder=\"название свойства\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={ 4 }>\r\n                                <Form.Control\r\n                                    value={ i.description }\r\n                                    onChange={ ( e ) => changeInfo( 'description', e.target.value, i.number ) }\r\n                                    placeholder=\"описание свойства\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={ 4 }>\r\n                                <Button\r\n                                    onClick={ () => removeInfo( i.number ) }\r\n                                    variant={ \"outline-danger\" }\r\n                                >\r\n                                    Удалить\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    ) }\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={ onHide }>Закрыть</Button>\r\n                <Button variant=\"outline-success\" onClick={ addDevice }>Добавить</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n} );\r\n\r\nexport default CreateDevice;","C:\\Users\\MAYA\\PERN\\client\\src\\http\\userAPI.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\http\\index.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\http\\deviceAPI.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\Pages.js",["138","139","140","141","142"],"import { observer } from 'mobx-react-lite';\r\nimport React, { useContext, useState } from 'react';\r\nimport { Button, Pagination } from 'react-bootstrap';\r\nimport { Context } from '../index';\r\nimport '../scss/styles.scss';\r\n\r\nconst Pages = observer( () =>\r\n{\r\n    const { device } = useContext( Context )\r\n\r\n    const pagesCount = Math.ceil( device.totalCount / device.limit )//количество страниц всего и номер последней страницы \r\n    let portionSize = 1\r\n    let portionCount = Math.ceil( pagesCount / portionSize ); // количество порций\r\n\r\n    let [ portionNumber, setPortionNumber ] = useState( 1 ); // номер порции начальный локальный стейт\r\n\r\n    let leftPortionPageNumber = ( portionNumber - 1 ) * portionSize + 1; //крайняя цифра порции слева\r\n    let rightPortionPageNumber = portionNumber * portionSize; //крайняя цифра порции справа\r\n\r\n    const pages = []\r\n\r\n    for ( let i = 0; i < pagesCount; i++ )\r\n    {\r\n        pages.push( i + 1 )\r\n    }\r\n\r\n    return (\r\n        // <div className='d-flex justify-content-between'>\r\n        <Pagination className=\"m-3\">\r\n            {/* пред */ }\r\n            { ( device.page != 1 ) && (\r\n                <Pagination.Item\r\n                    className={ 'paginationItemStyle' }\r\n                    activeLabel={ false }\r\n                    onClick={ () => device.setPage( device.page - 1 ) }\r\n                >\r\n                    { portionNumber > 1 &&\r\n                        device.page < leftPortionPageNumber &&\r\n                        setPortionNumber( portionNumber - 1 ) }\r\n                    { '<' }\r\n                </Pagination.Item>\r\n            ) }\r\n            {/* 1st page */ }\r\n\r\n            <Pagination.Item\r\n                className={ 'paginationItemStyle' }\r\n                active={ device.page === 1 }\r\n                activeLabel={ false }\r\n                onClick={ () => device.setPage( 1 ) }\r\n            >\r\n                { 1 }\r\n            </Pagination.Item>\r\n            {/* три точки */ }\r\n            { ( device.page > \"3\" ) && (\r\n                <Pagination.Item\r\n                    className={ 'paginationItemStyle' }\r\n                    activeLabel={ false }\r\n                    onClick={ () => device.setPage( device.page - 2 ) }\r\n                >{ '..' }\r\n                </Pagination.Item>\r\n            ) }\r\n            {\r\n                pages.filter(\r\n                    page =>\r\n                        page + 1 >= leftPortionPageNumber &&\r\n                        page - 1 <= rightPortionPageNumber\r\n                ).map( page =>\r\n                    ( page != 1 ) && ( page != pagesCount ) && <Pagination.Item\r\n                        className={ 'paginationItemStyle' }\r\n                        key={ page }\r\n                        active={ device.page === page }\r\n                        activeLabel={ false }\r\n                        onClick={ () => device.setPage( page ) }\r\n                    >\r\n                        { page }\r\n                    </Pagination.Item>\r\n                )\r\n            }\r\n            {/* {три точки} */ }\r\n            { ( device.page < pagesCount - 2 ) && (\r\n                <Pagination.Item\r\n                    className={ 'paginationItemStyle' }\r\n                    activeLabel={ false }\r\n                    onClick={ () => device.setPage( device.page + 2 ) }\r\n                >{ '..' }\r\n                </Pagination.Item>\r\n\r\n            ) }\r\n            {/* last page */ }\r\n            <Pagination.Item\r\n                className={ 'paginationItemStyle' }\r\n                active={ device.page === pagesCount }\r\n                activeLabel={ false }\r\n                onClick={ () => device.setPage( pagesCount ) }\r\n            >\r\n                { pagesCount }\r\n            </Pagination.Item>\r\n            {/* {след} */ }\r\n            { ( device.page != pagesCount ) && (\r\n                <Pagination.Item\r\n                    className={ 'paginationItemStyle' }\r\n                    activeLabel={ false }\r\n                    onClick={ () => device.setPage( device.page + 1 ) }\r\n                >\r\n                    { portionCount > portionNumber &&\r\n                        device.page > rightPortionPageNumber &&\r\n                        setPortionNumber( portionNumber + 1 ) }\r\n                    { '>' }\r\n                </Pagination.Item>\r\n            ) }\r\n        </Pagination>\r\n\r\n\r\n\r\n        // CREATE INDEX devices_idx ON devices (name);\r\n        // CLUSTER devices USING devices_idx;\r\n        // CREATE SEQUENCE devices_seq;\r\n        // SELECT setval('devices_seq', 1);\r\n        // UPDATE devices set id=nextval('devices_seq');\r\n\r\n\r\n        // </div>\r\n    );\r\n} );\r\n\r\nexport default Pages;\r\n\r\n/* <Pagination>\r\n  <Pagination.First />\r\n  <Pagination.Prev />\r\n  <Pagination.Item>{1}</Pagination.Item>\r\n  <Pagination.Ellipsis />\r\n\r\n  <Pagination.Item>{10}</Pagination.Item>\r\n  <Pagination.Item>{11}</Pagination.Item>\r\n  <Pagination.Item active>{12}</Pagination.Item>\r\n  <Pagination.Item>{13}</Pagination.Item>\r\n  <Pagination.Item disabled>{14}</Pagination.Item>\r\n\r\n  <Pagination.Ellipsis />\r\n  <Pagination.Item>{20}</Pagination.Item>\r\n  <Pagination.Next />\r\n  <Pagination.Last />\r\n</Pagination> */","C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Main.js",["143","144","145"],"import React, { useContext, useEffect } from 'react';\r\nimport { Col, Container } from 'react-bootstrap';\r\n// import bigStar from '../assets/bigStar.png'\r\n// import { useParams } from 'react-router-dom';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Context } from '../index';\r\nimport { fetchBrands, fetchTypes } from '../http/deviceAPI';\r\nimport { SliderHomepage } from '../components/Slider/Slider';\r\nimport TypeBar from '../components/TypeBar';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Main = observer( () =>\r\n{\r\n    const { device } = useContext( Context )\r\n    const history = useHistory()\r\n\r\n    console.log( \"TCL: device\", device )\r\n\r\n    useEffect( () =>\r\n    {\r\n        fetchTypes().then( data => device.setTypes( data ) )\r\n        // fetchBrands().then( data => device.setBrands( data ) )\r\n        console.log( 'device:', device )\r\n    }, [] )\r\n\r\n    useEffect( () =>\r\n    {\r\n        if ( +device.selectedType.id > 0 )\r\n        {\r\n            let query = `&types=${ device.selectedType.id }&page=${ device.page }&limit=${ device.limit }`;\r\n\r\n            console.log( \"TCL: query\", query )\r\n\r\n            history.push( `/shop/?${ query }` )\r\n        }\r\n    }, [ device.selectedType.id ] )\r\n\r\n\r\n    return (\r\n        <Container className='d-flex mt-3'>\r\n            {/* <h1>MAIN PAGE</h1> */ }\r\n            <Col md={ 3 }>\r\n                <TypeBar />\r\n            </Col>\r\n            <Col md={ 9 }>\r\n                <SliderHomepage\r\n                    dots={ true }\r\n                    center={ false }\r\n                    auto={ true }\r\n                    homePage={ true }\r\n                    show={ 1 }\r\n                    height={ '100%' }\r\n                    width={ '100%' }\r\n                    arrows={ false } />\r\n            </Col>\r\n        </Container>\r\n    )\r\n} )\r\n\r\nexport default Main","C:\\Users\\MAYA\\PERN\\client\\src\\components\\Slider\\Slider.js",["146","147","148","149","150"],"import Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { SampleNextArrow, SamplePrevArrow } from \"./Arrows\";\r\nimport { Image } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport\r\n{\r\n  CarouselWrapper,\r\n  CarouselImage,\r\n  SliderPromo,\r\n  SliderPromoMobile,\r\n  SliderPromoText,\r\n  SliderPromoButton,\r\n  H4\r\n} from \"./slider.styles\";\r\n\r\n\r\n\r\nexport const SliderHomepage = props =>\r\n{\r\n  const settings = {\r\n    slidesToShow: props.show,\r\n    accessibility: true,\r\n    dots: props.dots,\r\n    arrows: true,\r\n    infinite: true,\r\n    draggable: true,\r\n    autoplay: props.auto,\r\n    speed: 1000,\r\n    nextArrow: <SampleNextArrow homePage={ props.homePage } right={ 24 } />,\r\n    prevArrow: (\r\n      <SamplePrevArrow homePage={ props.homePage } left={ 70 } prev={ -3 } />\r\n    ),\r\n    responsive: [\r\n      {\r\n        breakpoint: 1000,\r\n        settings: {\r\n          dots: false,\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1,\r\n          infinite: true,\r\n          nextArrow: <SampleNextArrow homePage={ true } right={ 40 } />,\r\n          prevArrow: <SamplePrevArrow homePage={ true } left={ 40 } />\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 798,\r\n        settings: {\r\n          dots: false,\r\n          slidesToShow: 1,\r\n          nextArrow: <SampleNextArrow homePage={ true } right={ 40 } />,\r\n          prevArrow: <SamplePrevArrow homePage={ true } left={ 40 } />\r\n        }\r\n      }\r\n    ]\r\n  };\r\n\r\n  // const [ slides, setSlides ] = useState( [] );\r\n  // useEffect( () =>\r\n  // {\r\n  //   axios\r\n  //     .get( \"/slides\" )\r\n  //     .then( result =>\r\n  //     {\r\n  //       setSlides( result.data );\r\n  //     } )\r\n  //     .catch( err =>\r\n  //     {\r\n  //       console.log( err );\r\n  //     } );\r\n  // }, [] );\r\n  const slides = [\r\n    <Image style={ { objectFit: 'contain', width: '100%', height: '100%' } }\r\n      src={ 'ip12promax.jpg' } />,\r\n    <Image style={ { objectFit: 'contain', width: '100%', height: '100%' } }\r\n      src={ 'iphoneairpods.jpg' } />,\r\n    <Image style={ { objectFit: 'contain', width: '100%', height: '100%' } }\r\n      src={ 'iphone13.jpg' } />,\r\n\r\n  ]\r\n\r\n  const itemsHomePage = slides.slice( 0, 3 );\r\n  // const items = slides.slice( 3 );\r\n\r\n  if ( props.homePage === true )\r\n  {\r\n    return (\r\n      <CarouselWrapper className=\"carousel_wrapper\">\r\n        <Slider { ...settings }>\r\n          { itemsHomePage.map( item =>\r\n          {\r\n            return (\r\n              <div key={ item }>\r\n                <NavLink to={ '/shop' }>\r\n                  <CarouselImage height={ props.height } >\r\n                    { item }\r\n                  </CarouselImage>\r\n                </NavLink>\r\n              </div>\r\n            );\r\n          } ) }\r\n        </Slider>\r\n      </CarouselWrapper>\r\n    );\r\n\r\n  }\r\n};\r\n","C:\\Users\\MAYA\\PERN\\client\\src\\components\\Slider\\slider.styles.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\Slider\\Arrows.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\Slider\\MediaBreakpointsMixin.js",[],{"ruleId":"151","severity":1,"message":"152","line":101,"column":8,"nodeType":"153","endLine":101,"endColumn":10,"suggestions":"154"},{"ruleId":"151","severity":1,"message":"155","line":124,"column":45,"nodeType":"156","endLine":124,"endColumn":80},{"ruleId":"151","severity":1,"message":"157","line":126,"column":47,"nodeType":"156","endLine":126,"endColumn":85},{"ruleId":"151","severity":1,"message":"158","line":128,"column":36,"nodeType":"156","endLine":128,"endColumn":60},{"ruleId":"151","severity":1,"message":"159","line":36,"column":8,"nodeType":"153","endLine":36,"endColumn":33,"suggestions":"160"},{"ruleId":"161","severity":1,"message":"162","line":46,"column":5,"nodeType":"163","messageId":"164","endLine":50,"endColumn":6},{"ruleId":"151","severity":1,"message":"159","line":19,"column":8,"nodeType":"153","endLine":19,"endColumn":10,"suggestions":"165"},{"ruleId":"151","severity":1,"message":"166","line":28,"column":8,"nodeType":"153","endLine":28,"endColumn":10,"suggestions":"167"},{"ruleId":"168","severity":1,"message":"169","line":7,"column":50,"nodeType":"170","messageId":"171","endLine":7,"endColumn":60},{"ruleId":"168","severity":1,"message":"172","line":8,"column":10,"nodeType":"170","messageId":"171","endLine":8,"endColumn":16},{"ruleId":"168","severity":1,"message":"173","line":22,"column":9,"nodeType":"170","messageId":"171","endLine":22,"endColumn":15},{"ruleId":"168","severity":1,"message":"174","line":5,"column":37,"nodeType":"170","messageId":"171","endLine":5,"endColumn":49},{"ruleId":"151","severity":1,"message":"159","line":20,"column":8,"nodeType":"153","endLine":20,"endColumn":16,"suggestions":"175"},{"ruleId":"168","severity":1,"message":"172","line":3,"column":10,"nodeType":"170","messageId":"171","endLine":3,"endColumn":16},{"ruleId":"176","severity":1,"message":"177","line":31,"column":29,"nodeType":"178","messageId":"179","endLine":31,"endColumn":31},{"ruleId":"176","severity":1,"message":"177","line":68,"column":28,"nodeType":"178","messageId":"179","endLine":68,"endColumn":30},{"ruleId":"176","severity":1,"message":"177","line":68,"column":45,"nodeType":"178","messageId":"179","endLine":68,"endColumn":47},{"ruleId":"176","severity":1,"message":"177","line":99,"column":29,"nodeType":"178","messageId":"179","endLine":99,"endColumn":31},{"ruleId":"168","severity":1,"message":"180","line":7,"column":10,"nodeType":"170","messageId":"171","endLine":7,"endColumn":21},{"ruleId":"151","severity":1,"message":"159","line":24,"column":8,"nodeType":"153","endLine":24,"endColumn":10,"suggestions":"181"},{"ruleId":"151","severity":1,"message":"182","line":36,"column":8,"nodeType":"153","endLine":36,"endColumn":34,"suggestions":"183"},{"ruleId":"168","severity":1,"message":"184","line":11,"column":3,"nodeType":"170","messageId":"171","endLine":11,"endColumn":14},{"ruleId":"168","severity":1,"message":"185","line":12,"column":3,"nodeType":"170","messageId":"171","endLine":12,"endColumn":20},{"ruleId":"168","severity":1,"message":"186","line":13,"column":3,"nodeType":"170","messageId":"171","endLine":13,"endColumn":18},{"ruleId":"168","severity":1,"message":"187","line":14,"column":3,"nodeType":"170","messageId":"171","endLine":14,"endColumn":20},{"ruleId":"168","severity":1,"message":"188","line":15,"column":3,"nodeType":"170","messageId":"171","endLine":15,"endColumn":5},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'device', 'linked', 'parsed.limit', 'parsed.page', 'parsedBrands', 'parsedSort', 'parsedTypes', and 'shopUrl'. Either include them or remove the dependency array.","ArrayExpression",["189"],"Assignments to the 'type' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","TemplateLiteral","Assignments to the 'brand' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'sort' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["190"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["191"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["192"],"no-unused-vars","'SHOP_ROUTE' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'brands' is assigned a value but never used.","'fetchDevices' is defined but never used.",["193"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'fetchBrands' is defined but never used.",["194"],"React Hook useEffect has missing dependencies: 'device.limit', 'device.page', and 'history'. Either include them or remove the dependency array.",["195"],"'SliderPromo' is defined but never used.","'SliderPromoMobile' is defined but never used.","'SliderPromoText' is defined but never used.","'SliderPromoButton' is defined but never used.","'H4' is defined but never used.",{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"200","fix":"206"},{"desc":"207","fix":"208"},"Update the dependencies array to be: [device, linked, parsed.limit, parsed.page, parsedBrands, parsedSort, parsedTypes, shopUrl]",{"range":"209","text":"210"},"Update the dependencies array to be: [device, device.selectedBasket]",{"range":"211","text":"212"},"Update the dependencies array to be: [device]",{"range":"213","text":"214"},"Update the dependencies array to be: [id]",{"range":"215","text":"216"},"Update the dependencies array to be: [device, show]",{"range":"217","text":"218"},{"range":"219","text":"214"},"Update the dependencies array to be: [device.limit, device.page, device.selectedType.id, history]",{"range":"220","text":"221"},[3235,3237],"[device, linked, parsed.limit, parsed.page, parsedBrands, parsedSort, parsedTypes, shopUrl]",[953,978],"[device, device.selectedBasket]",[742,744],"[device]",[949,951],"[id]",[814,822],"[device, show]",[873,875],[1193,1219],"[device.limit, device.page, device.selectedType.id, history]"]