[{"C:\\Users\\MAYA\\PERN\\client\\src\\index.js":"1","C:\\Users\\MAYA\\PERN\\client\\src\\App.js":"2","C:\\Users\\MAYA\\PERN\\client\\src\\components\\AppRouter.js":"3","C:\\Users\\MAYA\\PERN\\client\\src\\routes.js":"4","C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Admin.js":"5","C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Shop.js":"6","C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Basket.js":"7","C:\\Users\\MAYA\\PERN\\client\\src\\utils\\consts.js":"8","C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Auth.js":"9","C:\\Users\\MAYA\\PERN\\client\\src\\pages\\DevicePage.js":"10","C:\\Users\\MAYA\\PERN\\client\\src\\store\\UserStore.js":"11","C:\\Users\\MAYA\\PERN\\client\\src\\store\\DeviceStore.js":"12","C:\\Users\\MAYA\\PERN\\client\\src\\components\\NavBar.js":"13","C:\\Users\\MAYA\\PERN\\client\\src\\components\\TypeBar.js":"14","C:\\Users\\MAYA\\PERN\\client\\src\\components\\BrandBar.js":"15","C:\\Users\\MAYA\\PERN\\client\\src\\components\\DeviceList.js":"16","C:\\Users\\MAYA\\PERN\\client\\src\\components\\DeviceItem.js":"17","C:\\Users\\MAYA\\PERN\\client\\src\\components\\modals\\createType.js":"18","C:\\Users\\MAYA\\PERN\\client\\src\\components\\modals\\createBrand.js":"19","C:\\Users\\MAYA\\PERN\\client\\src\\components\\modals\\createDevice.js":"20","C:\\Users\\MAYA\\PERN\\client\\src\\http\\userAPI.js":"21","C:\\Users\\MAYA\\PERN\\client\\src\\http\\index.js":"22","C:\\Users\\MAYA\\PERN\\client\\src\\http\\deviceAPI.js":"23","C:\\Users\\MAYA\\PERN\\client\\src\\components\\Pages.js":"24"},{"size":432,"mtime":1634577903900,"results":"25","hashOfConfig":"26"},{"size":859,"mtime":1635154289084,"results":"27","hashOfConfig":"26"},{"size":918,"mtime":1635148687860,"results":"28","hashOfConfig":"26"},{"size":780,"mtime":1634571247763,"results":"29","hashOfConfig":"26"},{"size":1707,"mtime":1635251649401,"results":"30","hashOfConfig":"26"},{"size":1654,"mtime":1635357251365,"results":"31","hashOfConfig":"26"},{"size":150,"mtime":1634563624691,"results":"32","hashOfConfig":"26"},{"size":234,"mtime":1635158001407,"results":"33","hashOfConfig":"26"},{"size":3447,"mtime":1635317962975,"results":"34","hashOfConfig":"26"},{"size":3704,"mtime":1635251109428,"results":"35","hashOfConfig":"26"},{"size":838,"mtime":1635098787894,"results":"36","hashOfConfig":"26"},{"size":3510,"mtime":1635356808214,"results":"37","hashOfConfig":"26"},{"size":2609,"mtime":1635357843094,"results":"38","hashOfConfig":"26"},{"size":785,"mtime":1635149314068,"results":"39","hashOfConfig":"26"},{"size":805,"mtime":1635256179395,"results":"40","hashOfConfig":"26"},{"size":646,"mtime":1635321006641,"results":"41","hashOfConfig":"26"},{"size":2217,"mtime":1635332914671,"results":"42","hashOfConfig":"26"},{"size":1397,"mtime":1635106497228,"results":"43","hashOfConfig":"26"},{"size":1502,"mtime":1635252543110,"results":"44","hashOfConfig":"26"},{"size":6538,"mtime":1635280374853,"results":"45","hashOfConfig":"26"},{"size":713,"mtime":1635097010132,"results":"46","hashOfConfig":"26"},{"size":559,"mtime":1635158024728,"results":"47","hashOfConfig":"26"},{"size":1236,"mtime":1635356356002,"results":"48","hashOfConfig":"26"},{"size":909,"mtime":1635320943466,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"oj9i0j",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\MAYA\\PERN\\client\\src\\index.js",[],["107","108"],"C:\\Users\\MAYA\\PERN\\client\\src\\App.js",["109"],"import React, {useContext, useEffect, useState} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(true)\n            user.setIsAuth(true)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n    return (\n        <BrowserRouter>\n            <NavBar />\n            <AppRouter />\n        </BrowserRouter>\n    );\n});\n\nexport default App;","C:\\Users\\MAYA\\PERN\\client\\src\\components\\AppRouter.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\routes.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Admin.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Shop.js",["110","111"],"import React, {useContext, useEffect} from 'react';\r\nimport {Container} from \"react-bootstrap\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport TypeBar from \"../components/TypeBar\";\r\nimport BrandBar from \"../components/BrandBar\";\r\nimport DeviceList from \"../components/DeviceList\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {fetchBrands, fetchDevices, fetchTypes} from \"../http/deviceAPI\";\r\nimport Pages from \"../components/Pages\";\r\n\r\nconst Shop = observer(() => {\r\n    const {device} = useContext(Context)\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => device.setTypes(data))\r\n        fetchBrands().then(data => device.setBrands(data))\r\n        fetchDevices(null, null, 1, 2).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n        console.log('device:',device)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, device.limit).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n    }, [device.page, device.selectedType, device.selectedBrand,])\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"mt-2\">\r\n                <Col md={3}>\r\n                    <TypeBar/>\r\n                </Col>\r\n                <Col md={9}>\r\n                    <BrandBar/>\r\n                    <Pages/>\r\n                    <DeviceList/>                    \r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Shop;","C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Basket.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\utils\\consts.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Auth.js",["112"],"import React, { useContext, useState } from 'react';\r\nimport { Container, Form, Card, Button, Row } from \"react-bootstrap\";\r\nimport { NavLink, useLocation, useHistory } from \"react-router-dom\";\r\nimport { LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE } from \"../utils/consts\";\r\nimport { login, registration } from \"../http/userAPI\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Context } from \"../index\";\r\n\r\n\r\nconst Auth = observer( () =>\r\n{\r\n    const location = useLocation()\r\n    const { user } = useContext( Context )\r\n    let isLogin = ( location.pathname === LOGIN_ROUTE ) //без скобок не работает?\r\n    const history = useHistory()\r\n    const [ email, setEmail ] = useState( '' )\r\n    const [ password, setPassword ] = useState( '' )\r\n\r\n    const click = async () =>\r\n    {\r\n        try\r\n        {\r\n            let data;\r\n            if ( isLogin )\r\n            {\r\n                data = await login( email, password );\r\n            } else\r\n            {\r\n                data = await registration( email, password );\r\n            }\r\n            // user.setUser( user )\r\n           \r\n           user.setUser( data )\r\n           console.log(\"TCL: user\", user)\r\n\r\n            user.setIsAuth( true )\r\n            history.push( SHOP_ROUTE )\r\n        } catch ( e )\r\n        {\r\n            console.log( e.response.data.message )\r\n        }\r\n\r\n    }\r\n\r\n\r\n    console.log( \"TCL: isLogin\", isLogin )\r\n\r\n    return (\r\n        <Container\r\n            className='d-flex justify-content-center align-items-center'\r\n            style={ { height: window.innerHeight - 54 } }\r\n        >\r\n            <Card style={ { width: 600 } } className='p-5'>\r\n                <h2 className='m-auto'>{ isLogin ? 'Авторизация' : 'Регистрация' }</h2>\r\n                <Form className='d-flex flex-column'>\r\n                    <Form.Control\r\n                        className='mt-2'\r\n                        placeholder=\"Введите email\"\r\n                        value={ email }\r\n                        onChange={ e => setEmail( e.target.value ) }\r\n                        type='em'\r\n                    />\r\n                    <Form.Control\r\n                        className='mt-2'\r\n                        placeholder=\"Введите пароль\"\r\n                        value={ password }\r\n                        type='password'\r\n                        onChange={ e => setPassword( e.target.value ) }\r\n                    />\r\n                    <div className='d-flex justify-content-between mt-3 pl-3 pr-3'>\r\n                        { isLogin ?\r\n                            <div>\r\n                                Нет аккаунта?<NavLink to={ REGISTRATION_ROUTE }>Зарегистрируйтесь</NavLink>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                Есть аккаунт?<NavLink to={ LOGIN_ROUTE }>Войти</NavLink>\r\n\r\n                            </div>\r\n                        }\r\n                        <Button\r\n                            variant={ \"outline-success\" }\r\n                            onClick={ click }\r\n                        >\r\n                            { isLogin ? 'Войти' : 'Регистрация' }\r\n                        </Button>\r\n                    </div>\r\n                </Form>\r\n            </Card>\r\n        </Container>\r\n    )\r\n} )\r\n\r\nexport default Auth\r\n","C:\\Users\\MAYA\\PERN\\client\\src\\pages\\DevicePage.js",["113","114"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Button, Card, Col, Container, Image, Row } from 'react-bootstrap';\r\nimport bigStar from '../assets/bigStar.png'\r\nimport { useParams } from 'react-router-dom';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Context } from '../index';\r\nimport { fetchBrands, fetchOneDevice, fetchTypes } from '../http/deviceAPI';\r\n\r\n\r\nconst DevicePage = observer(() =>\r\n{\r\n    const { device } = useContext( Context )\r\n    console.log(\"TCL: device\", device)\r\n    useEffect(() => {\r\n        fetchTypes().then(data => device.setTypes(data))\r\n        fetchBrands().then(data => device.setBrands(data))\r\n        console.log('device:',device)\r\n    }, [])\r\n\r\n    \r\n    const [ device1, setdevice1 ] = useState( { info: [] } )\r\n    const { id } = useParams()\r\n\r\n    useEffect( () =>\r\n    {\r\n        fetchOneDevice( id ).then( data => setdevice1( data ) )\r\n    }, [] )\r\n\r\n    // const device1 = { id: 1, name: 'Iphone 12pro', price: 158566, rating: 5, img: 'https://content1.rozetka.com.ua/goods/images/big/173869349.jpg' }\r\n    // const description = [\r\n    //     { id: 1, title: 'Оперативная память', description: '5 gb' },\r\n    //     { id: 2, title: 'Камера', description: '48 mp' },\r\n    //     { id: 3, title: 'Процессор', description: '2 ghz' },\r\n    //     { id: 4, title: 'Аккумулятор', description: '4000 mah' },\r\n    // ]\r\n    return (\r\n        <Container>\r\n            <Row className='mt-3'>\r\n                <Col md={ 4 }>\r\n                    <Image width={ 300 } height={ 300 } src={ process.env.REACT_APP_API_URL + device1.img } />\r\n                </Col>\r\n                <Col md={ 4 }>\r\n                    <div className='d-flex flex-column'>\r\n                        <h2>{ device1.name }&nbsp;\r\n                        { device.brands.map( brand =>\r\n                        <span key={ brand.id }>\r\n                            { brand.id === device1.brandId ? brand.name : '' }\r\n                        </span>\r\n                    ) }&nbsp;\r\n                     { device.types.map( type =>\r\n                        <span key={ type.id }>\r\n                            { type.id === device1.typeId ? type.name : '' }\r\n                        </span>\r\n                    ) }\r\n                        </h2>\r\n                        <div\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{background: `url(${bigStar}) no-repeat center center`, width:240, height: 240, backgroundSize: 'cover', fontSize:64}}\r\n                        >\r\n                            {device1.rating}\r\n                        </div>\r\n\r\n                    </div>\r\n                </Col>\r\n                <Col md={ 4 }>\r\n                    <Card className='d-flex flex-column align-items-center justify-content-around'\r\n                        style={ { width: 300, height: 300, fontSize: 32, border: '5px solid grey' } }\r\n                    >\r\n                        <h3>{ device1.price } грн</h3>\r\n                        <Button variant={ 'outline-dark' }>В корзину</Button>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row className='d-flex flex-column m-3'>\r\n                <h1 >Характеристики:</h1>\r\n                { device1.info.map( ( info, index ) =>\r\n                    <Row key={ info.id } style={ { background: index % 2 === 0 ? 'lightgrey' : 'transparent', padding: 5 } }>\r\n                        { info.title }:{ info.description }\r\n                    </Row> ) }\r\n            </Row>\r\n        </Container>\r\n    )\r\n})\r\n\r\nexport default DevicePage","C:\\Users\\MAYA\\PERN\\client\\src\\store\\UserStore.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\store\\DeviceStore.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\NavBar.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\TypeBar.js",["115"],"import React, { useContext } from 'react';\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Context } from \"../index\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nconst TypeBar = observer( () =>\r\n{\r\n    const { device } = useContext( Context )\r\n    return (\r\n        <ListGroup>\r\n            { device.types.map( type =>\r\n                <ListGroup.Item\r\n                    style={ { cursor: 'pointer' } }\r\n                    active={ type.id === device.selectedType.id }\r\n                    onClick={ () => device.setSelectedType( type ) }\r\n                    key={ type.id }>\r\n                    { type.name }\r\n                </ListGroup.Item>\r\n            ) }\r\n        </ListGroup>\r\n    );\r\n} );\r\n\r\nexport default TypeBar;","C:\\Users\\MAYA\\PERN\\client\\src\\components\\BrandBar.js",["116"],"import { observer } from 'mobx-react-lite';\r\nimport React, { useContext } from 'react';\r\nimport { Context } from '../index';\r\nimport { Card, Row } from 'react-bootstrap';\r\n\r\nconst BrandBar = observer( () =>\r\n{\r\n    const { device } = useContext( Context )\r\n    return (\r\n        <div className='d-flex flex-direction-row flex-wrap'>\r\n            { device.brands.map( brand =>\r\n                <Card \r\n                key={ brand.id }\r\n                className='p-3'\r\n                style={{cursor:'pointer'}}\r\n                onClick={()=>device.setSelectedBrand(brand)}\r\n                border={brand.id===device.selectedBrand.id ? 'dark':'light'}\r\n                >\r\n                    { brand.name }\r\n                </Card>\r\n            ) }\r\n        </div>\r\n    );\r\n} );\r\n\r\nexport default BrandBar;","C:\\Users\\MAYA\\PERN\\client\\src\\components\\DeviceList.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\DeviceItem.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\modals\\createType.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\modals\\createBrand.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\modals\\createDevice.js",["117","118"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Button, Dropdown, Form, Row, Col } from \"react-bootstrap\";\r\nimport { Context } from \"../../index\";\r\nimport { createDevice, fetchBrands, fetchDevices, fetchTypes } from \"../../http/deviceAPI\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst CreateDevice = observer( ( { show, onHide } ) =>\r\n{\r\n    const { device } = useContext( Context )\r\n    const [ name, setName ] = useState( '' )\r\n    const [ price, setPrice ] = useState( 0 )\r\n    const [ file, setFile ] = useState( null )\r\n    const [ info, setInfo ] = useState( [] )\r\n\r\n    useEffect( () =>\r\n    {\r\n        fetchTypes().then( data => device.setTypes( data ) )\r\n        fetchBrands().then( data => device.setBrands( data ) )\r\n    }, [ show ] )//[show] обновляем бренды и типы при их добавлении перед товаром\r\n\r\n    const addInfo = () =>\r\n    {\r\n        setInfo( [ ...info, { title: '', description: '', number: Date.now() } ] )\r\n    }\r\n    const removeInfo = ( number ) =>\r\n    {\r\n        setInfo( info.filter( i => i.number !== number ) )\r\n    }\r\n    const changeInfo = ( key, value, number ) =>\r\n    {\r\n        setInfo( info.map( i => i.number === number ? { ...i, [ key ]: value } : i ) )\r\n    }\r\n\r\n    const selectFile = e =>\r\n    {\r\n        setFile( e.target.files[ 0 ] )\r\n    }\r\n\r\n    const addDevice = () =>\r\n    {\r\n        console.log( 'info', info )\r\n        const formData = new FormData()\r\n        formData.append( 'name', name )\r\n        formData.append( 'price', `${ price }` )\r\n        formData.append( 'img', file )\r\n        formData.append( 'brandId', device.selectedBrand.id )\r\n        formData.append( 'typeId', device.selectedType.id )\r\n        formData.append( 'info', JSON.stringify( info ) )\r\n        createDevice( formData ).then( data =>onHide())\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={ show }\r\n            onHide={ onHide }\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Добавить устройство\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{ device.selectedType.name || \"Выберите тип\" }</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            { device.types.map( type =>\r\n                                <Dropdown.Item\r\n                                    onClick={ () => device.setSelectedType( type ) }\r\n                                    key={ type.id }\r\n                                >\r\n                                    { type.name }\r\n                                </Dropdown.Item>\r\n                            ) }\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{ device.selectedBrand.name || \"Выберите бренд\" }</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            { device.brands.map( brand =>\r\n                                <Dropdown.Item\r\n                                    onClick={ () => device.setSelectedBrand( brand ) }\r\n                                    key={ brand.id }\r\n                                >\r\n                                    { brand.name }\r\n                                </Dropdown.Item>\r\n                            ) }\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Form.Control\r\n                        value={ name }\r\n                        onChange={ e => setName( e.target.value ) }\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите название\"\r\n                    />\r\n                    <Form.Control\r\n                        value={ price }\r\n                        onChange={ e => setPrice( Number( e.target.value ) ) }\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите цену\"\r\n                    // type=\"number\"\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        type=\"file\"\r\n                        onChange={ selectFile }\r\n                    />\r\n                    <hr />\r\n                    <Button\r\n                        variant={ \"outline-dark\" }\r\n                        onClick={ addInfo }\r\n                    >\r\n                        Добавить новое свойство\r\n                    </Button>\r\n                    { info.map( i =>\r\n                        <Row className=\"mt-4\" key={ i.number }>\r\n                            <Col md={ 4 }>\r\n                                <Form.Control\r\n                                    value={ i.title }\r\n                                    onChange={ ( e ) => changeInfo( 'title', e.target.value, i.number ) }\r\n                                    placeholder=\"название свойства\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={ 4 }>\r\n                                <Form.Control\r\n                                    value={ i.description }\r\n                                    onChange={ ( e ) => changeInfo( 'description', e.target.value, i.number ) }\r\n                                    placeholder=\"описание свойства\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={ 4 }>\r\n                                <Button\r\n                                    onClick={ () => removeInfo( i.number ) }\r\n                                    variant={ \"outline-danger\" }\r\n                                >\r\n                                    Удалить\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    ) }\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={ onHide }>Закрыть</Button>\r\n                <Button variant=\"outline-success\" onClick={ addDevice }>Добавить</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n} );\r\n\r\nexport default CreateDevice;","C:\\Users\\MAYA\\PERN\\client\\src\\http\\userAPI.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\http\\index.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\http\\deviceAPI.js",["119"],"import {$authHost, $host} from \"./index\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createType = async (type) => {\r\n    const {data} = await $authHost.post('api/type', type)\r\n    return data\r\n}\r\n\r\nexport const fetchTypes = async () => {\r\n    const {data} = await $host.get('api/type')\r\n    return data\r\n}\r\n\r\nexport const createBrand = async (brand) => {\r\n    const {data} = await $authHost.post('api/brand', brand)\r\n    return data\r\n}\r\n\r\nexport const fetchBrands = async () => {\r\n    const {data} = await $host.get('api/brand', )\r\n    return data\r\n}\r\n\r\nexport const createDevice = async (device) => {\r\nconsole.log(\"TCL: createDevice -> device\", device)\r\n    \r\n    try {\r\n        const {data} = await $authHost.post('api/device', device)\r\n    console.log('data', data)\r\n    return data\r\n    } \r\n    catch (error) {\r\n        console.log(error)\r\n    }\r\n   \r\n}\r\n\r\nexport const fetchDevices = async (typeId, brandId, page, limit) => {\r\n    const {data} = await $host.get('api/device', {params: {\r\n            typeId, brandId, page, limit\r\n        }})\r\n        console.log('data',data)\r\n    return data\r\n}\r\n\r\nexport const fetchOneDevice = async (id) => {\r\n    const {data} = await $host.get('api/device/' + id)\r\n    return data\r\n}","C:\\Users\\MAYA\\PERN\\client\\src\\components\\Pages.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":19,"column":8,"nodeType":"126","endLine":19,"endColumn":10,"suggestions":"127"},{"ruleId":"124","severity":1,"message":"128","line":24,"column":8,"nodeType":"126","endLine":24,"endColumn":10,"suggestions":"129"},{"ruleId":"124","severity":1,"message":"128","line":31,"column":8,"nodeType":"126","endLine":31,"endColumn":65,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":2,"column":41,"nodeType":"133","messageId":"134","endLine":2,"endColumn":44},{"ruleId":"124","severity":1,"message":"128","line":18,"column":8,"nodeType":"126","endLine":18,"endColumn":10,"suggestions":"135"},{"ruleId":"124","severity":1,"message":"136","line":27,"column":8,"nodeType":"126","endLine":27,"endColumn":10,"suggestions":"137"},{"ruleId":"131","severity":1,"message":"138","line":4,"column":8,"nodeType":"133","messageId":"134","endLine":4,"endColumn":11},{"ruleId":"131","severity":1,"message":"132","line":4,"column":16,"nodeType":"133","messageId":"134","endLine":4,"endColumn":19},{"ruleId":"131","severity":1,"message":"139","line":5,"column":37,"nodeType":"133","messageId":"134","endLine":5,"endColumn":49},{"ruleId":"124","severity":1,"message":"128","line":20,"column":8,"nodeType":"126","endLine":20,"endColumn":16,"suggestions":"140"},{"ruleId":"131","severity":1,"message":"141","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":18},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["144"],"React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["145"],["146"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar",["147"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["148"],"'Col' is defined but never used.","'fetchDevices' is defined but never used.",["149"],"'jwt_decode' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"152","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [user]",{"range":"161","text":"162"},"Update the dependencies array to be: [device]",{"range":"163","text":"164"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"165","text":"166"},{"range":"167","text":"164"},"Update the dependencies array to be: [id]",{"range":"168","text":"169"},"Update the dependencies array to be: [device, show]",{"range":"170","text":"171"},[641,643],"[user]",[936,938],"[device]",[1186,1243],"[device.page, device.selectedType, device.selectedBrand, device]",[709,711],[919,921],"[id]",[814,822],"[device, show]"]