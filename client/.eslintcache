[{"C:\\Users\\MAYA\\PERN\\client\\src\\index.js":"1","C:\\Users\\MAYA\\PERN\\client\\src\\App.js":"2","C:\\Users\\MAYA\\PERN\\client\\src\\components\\AppRouter.js":"3","C:\\Users\\MAYA\\PERN\\client\\src\\routes.js":"4","C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Admin.js":"5","C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Shop.js":"6","C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Basket.js":"7","C:\\Users\\MAYA\\PERN\\client\\src\\utils\\consts.js":"8","C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Auth.js":"9","C:\\Users\\MAYA\\PERN\\client\\src\\pages\\DevicePage.js":"10","C:\\Users\\MAYA\\PERN\\client\\src\\store\\UserStore.js":"11","C:\\Users\\MAYA\\PERN\\client\\src\\store\\DeviceStore.js":"12","C:\\Users\\MAYA\\PERN\\client\\src\\components\\NavBar.js":"13","C:\\Users\\MAYA\\PERN\\client\\src\\components\\TypeBar.js":"14","C:\\Users\\MAYA\\PERN\\client\\src\\components\\BrandBar.js":"15","C:\\Users\\MAYA\\PERN\\client\\src\\components\\DeviceList.js":"16","C:\\Users\\MAYA\\PERN\\client\\src\\components\\DeviceItem.js":"17","C:\\Users\\MAYA\\PERN\\client\\src\\components\\modals\\createType.js":"18","C:\\Users\\MAYA\\PERN\\client\\src\\components\\modals\\createBrand.js":"19","C:\\Users\\MAYA\\PERN\\client\\src\\components\\modals\\createDevice.js":"20","C:\\Users\\MAYA\\PERN\\client\\src\\http\\userAPI.js":"21","C:\\Users\\MAYA\\PERN\\client\\src\\http\\index.js":"22","C:\\Users\\MAYA\\PERN\\client\\src\\http\\deviceAPI.js":"23","C:\\Users\\MAYA\\PERN\\client\\src\\components\\Pages.js":"24","C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Main.js":"25"},{"size":432,"mtime":1634577903900,"results":"26","hashOfConfig":"27"},{"size":863,"mtime":1636445697741,"results":"28","hashOfConfig":"27"},{"size":985,"mtime":1636217022107,"results":"29","hashOfConfig":"27"},{"size":893,"mtime":1635797793787,"results":"30","hashOfConfig":"27"},{"size":1707,"mtime":1635251649401,"results":"31","hashOfConfig":"27"},{"size":5289,"mtime":1636451721549,"results":"32","hashOfConfig":"27"},{"size":3172,"mtime":1636446106225,"results":"33","hashOfConfig":"27"},{"size":276,"mtime":1635798293307,"results":"34","hashOfConfig":"27"},{"size":3441,"mtime":1636445862627,"results":"35","hashOfConfig":"27"},{"size":4606,"mtime":1636303505921,"results":"36","hashOfConfig":"27"},{"size":838,"mtime":1635098787894,"results":"37","hashOfConfig":"27"},{"size":2810,"mtime":1636233979655,"results":"38","hashOfConfig":"27"},{"size":2880,"mtime":1636217083338,"results":"39","hashOfConfig":"27"},{"size":1748,"mtime":1636447809995,"results":"40","hashOfConfig":"27"},{"size":1652,"mtime":1636217051363,"results":"41","hashOfConfig":"27"},{"size":646,"mtime":1635321006641,"results":"42","hashOfConfig":"27"},{"size":2609,"mtime":1636362421211,"results":"43","hashOfConfig":"27"},{"size":1397,"mtime":1635106497228,"results":"44","hashOfConfig":"27"},{"size":1502,"mtime":1635252543110,"results":"45","hashOfConfig":"27"},{"size":6683,"mtime":1635839861130,"results":"46","hashOfConfig":"27"},{"size":713,"mtime":1635097010132,"results":"47","hashOfConfig":"27"},{"size":559,"mtime":1635158024728,"results":"48","hashOfConfig":"27"},{"size":2016,"mtime":1636363141942,"results":"49","hashOfConfig":"27"},{"size":909,"mtime":1635320943466,"results":"50","hashOfConfig":"27"},{"size":1371,"mtime":1636448123485,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"oj9i0j",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\MAYA\\PERN\\client\\src\\index.js",[],["107","108"],"C:\\Users\\MAYA\\PERN\\client\\src\\App.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\AppRouter.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\routes.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Admin.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Shop.js",["109"],"C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Basket.js",["110","111"],"import React, { useEffect } from 'react';\r\nimport { useContext } from 'react';\r\nimport { Context } from '..';\r\nimport { deleteFromBasket, getBasket } from '../http/deviceAPI';\r\n\r\nimport { Button, Card, Col, Container, Row } from 'react-bootstrap'\r\nimport { observer } from 'mobx-react-lite';\r\n\r\n// import close from '../assets/close.svg'\r\n\r\nconst Basket = observer( () =>\r\n{\r\n    const { device } = useContext( Context )\r\n\r\n    console.log( \"TCL: device\", device )\r\n\r\n    useEffect( () =>\r\n    {\r\n        getBasket().then( data => device.setBaskets( data ) )\r\n    }, [device] )\r\n\r\n    useEffect( () =>\r\n    {\r\n\r\n        if ( device.selectedBasket !== null )\r\n        {\r\n            deleteFromBasket( device.selectedBasket ).then( data =>\r\n            {\r\n                device.setSelectedBasket( null )\r\n            } )\r\n        }\r\n\r\n        getBasket().then( data => device.setBaskets( data ) )\r\n\r\n    }, [ device.selectedBasket ] )\r\n\r\n\r\n\r\n\r\n    //Считаем общую сумму, которую юзер набрал в корзину\r\n\r\n\r\n\r\n    let prices = 0;\r\n    {\r\n        ( device.basket.length > 0 ) && ( device.basket.map( price =>\r\n            prices += Number( price.device.price )\r\n        ) )\r\n    }\r\n    return (\r\n        <Container\r\n            className=\"d-flex flex-sm-column justify-content-center align-items-center mt-3\"\r\n        >\r\n            <h1 className=\"p-4\">Корзина</h1>\r\n\r\n            { ( device.basket.length > 0 ) && ( device.basket.map( product =>\r\n                <Card className=\"d-flex w-100 p-2 justify-content-center mb-2\" key={ product.id }>\r\n                    <Row className=\"d-flex \">\r\n                        <Col md={ 3 }>\r\n                            <img src={ process.env.REACT_APP_API_URL + product.device.img } alt={'device'} height={ 60 } />\r\n                        </Col>\r\n                        <Col md={ 6 }>\r\n                            <div className=\"d-flex h-100 flex-row justify-content-end align-items-center\">\r\n                                <h4 className=\"pl-3\">{ product.device.name }</h4>\r\n                            </div>\r\n                        </Col>\r\n                        <Col md={ 3 }>\r\n                            <div className=\"d-flex h-100 flex-row justify-content-end align-items-center\">\r\n                                <Button\r\n                                    variant={ 'outline-dark' }\r\n                                    onClick={ () => device.setSelectedBasket( Number( product.id ) ) }\r\n                                >удалить\r\n                                </Button> <h4 className=\"font-weight-light\">{ product.device.price } грн</h4>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Card>\r\n            ) ) }\r\n\r\n            <Card className=\"d-flex flex-row  p-2 justify-content-between align-items-center mb-2 align-self-end\">\r\n                <h3 className=\"pr-2\">Итого:&nbsp; </h3>\r\n                <h4 className=\"pl-2\"> &nbsp;{ prices } <span className=\"font-weight-normal pl-2\"> грн</span></h4>\r\n            </Card>\r\n        </Container>\r\n    )\r\n} )\r\nexport default Basket","C:\\Users\\MAYA\\PERN\\client\\src\\utils\\consts.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Auth.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\pages\\DevicePage.js",["112","113"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Button, Card, Col, Container, Image, Row } from 'react-bootstrap';\r\nimport bigStar from '../assets/bigStar.png'\r\nimport { useParams } from 'react-router-dom';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Context } from '../index';\r\nimport { fetchBrands, fetchOneDevice, fetchTypes, addtoBasket } from '../http/deviceAPI';\r\n\r\n\r\nconst DevicePage = observer( () =>\r\n{\r\n    const { device } = useContext( Context )\r\n    console.log( \"TCL: device\", device )\r\n    useEffect( () =>\r\n    {\r\n        fetchTypes().then( data => device.setTypes( data ) )\r\n        fetchBrands().then( data => device.setBrands( data ) )\r\n        console.log( 'device:', device )\r\n    }, [] )\r\n\r\n\r\n    const [ device1, setdevice1 ] = useState( { info: [] } )\r\n    const { id } = useParams()\r\n\r\n    useEffect( () =>\r\n    {\r\n        fetchOneDevice( id ).then( data => setdevice1( data ) )\r\n    }, [] )\r\n\r\n    // const device1 = { id: 1, name: 'Iphone 12pro', price: 158566, rating: 5, img: 'https://content1.rozetka.com.ua/goods/images/big/173869349.jpg' }\r\n    // const description = [\r\n    //     { id: 1, title: 'Оперативная память', description: '5 gb' },\r\n    //     { id: 2, title: 'Камера', description: '48 mp' },\r\n    //     { id: 3, title: 'Процессор', description: '2 ghz' },\r\n    //     { id: 4, title: 'Аккумулятор', description: '4000 mah' },\r\n    // ]\r\n\r\n\r\n    //   функция для записи \r\n    const add = () =>\r\n    {\r\n        const formData = new FormData()\r\n        formData.append( 'deviceId', id )\r\n        addtoBasket( formData ).then( response => alert( `Товар ` + device.name + ` был добавлен в вашу корзину!` ) )\r\n    }\r\n    return (\r\n        <Container>\r\n            <Row className='mt-3'>\r\n                <Col md={ 6 }>\r\n                    <div style={ { width: 500, height: 400, overflow: 'hidden' } }>\r\n                        <Image style={ { objectFit: 'contain', width: '100%', height: '100%' } } src={ process.env.REACT_APP_API_URL + device1.img } />\r\n                    </div>\r\n                </Col>\r\n                <Col md={ 6 } >\r\n                    <div className='d-flex flex-column'>\r\n                        <h2>{ device1.name }&nbsp;\r\n                            <div style={{color:'lightgrey'}}>\r\n                                { device.brands.map( brand =>\r\n                                    <span key={ brand.id }>\r\n                                        { brand.id === device1.brandId ? brand.name : '' }\r\n                                    </span>\r\n                                ) }&nbsp;\r\n                                { device.types.map( type =>\r\n                                    <span key={ type.id }>\r\n                                        { type.id === device1.typeId ? type.name : '' }\r\n                                    </span>\r\n                                ) }\r\n                            </div>\r\n                        </h2>\r\n                        <div className='d-flex flex-row'>\r\n\r\n                            <Card className='d-flex flex-row align-items-center justify-content-around'\r\n                                style={ { width: '100%', height: 120, fontSize: 32, border: '1px solid lightgrey' } }\r\n                            >\r\n                                <div\r\n                                    className=\"d-flex align-items-center justify-content-center\"\r\n                                    style={ { background: `url(${ bigStar }) no-repeat center center`, width: 80, height: 80, backgroundSize: 'cover', fontSize: 24 } }\r\n                                >\r\n                                    { device1.rating }\r\n                                </div>\r\n                                <h3>{ device1.price } грн</h3>\r\n                                <Button variant={ \"outline-dark\" } onClick={ add } >Добавить в корзину</Button>\r\n                            </Card>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </Col>\r\n\r\n            </Row>\r\n            <Row className='d-flex flex-column m-3'>\r\n                <h1 >Характеристики:</h1>\r\n                { device1.info.map( ( info, index ) =>\r\n                    <Row key={ info.id } style={ { background: index % 2 === 0 ? 'lightgrey' : 'transparent', padding: 5 } }>\r\n                        { info.title }:{ info.description }\r\n                    </Row> ) }\r\n            </Row>\r\n        </Container>\r\n    )\r\n} )\r\n\r\nexport default DevicePage","C:\\Users\\MAYA\\PERN\\client\\src\\store\\UserStore.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\store\\DeviceStore.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\NavBar.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\TypeBar.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\BrandBar.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\DeviceList.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\DeviceItem.js",["114"],"import { observer } from 'mobx-react-lite';\r\nimport React, { useContext } from 'react';\r\nimport { Card, Col, Image } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Context } from '../index';\r\nimport star from '../assets/star.png'\r\nimport { DEVICE_ROUTE } from '../utils/consts';\r\n\r\n\r\n\r\n\r\nconst DeviceItem = observer( ( props ) =>\r\n{\r\n    //берем все бренды из стора и сравниваем бренд ид товара для получение названия бренда\r\n    const { device } = useContext( Context )\r\n    // console.log( \"TCL: device\", device )\r\n\r\n    const device1 = props.device\r\n    // console.log( \"TCL: device1\", device1 )\r\n\r\n    const history = useHistory()\r\n    let brands = device.brands\r\n    // console.log( \"TCL: brands\", brands )\r\n    // console.log( \"TCL: history\", history )\r\n    // console.log( \"TCL: DEVICE_ROUTE\", DEVICE_ROUTE )\r\n\r\n    return (\r\n        <Col className='mt-3' md={ 4 } onClick={ () => history.push( DEVICE_ROUTE + '/' + device1.id ) }>\r\n            <Card className='ml-3' style={ { width: 250, height: 400, cursor: 'pointer' } } border={ 'light' }>\r\n                <div style={ { width: 250, height: 250, overflow: 'hidden' } }>\r\n                    <Image style={ { objectFit: 'contain', width: '100%', height: '100%' } }\r\n                        src={ process.env.REACT_APP_API_URL + device1.img } />\r\n                </div>\r\n                <div className=\"text-black-50 mt-3 d-flex justify-content-between align-items-center\">\r\n                    <div className='d-flex align-items-center'>\r\n                        <div>\r\n                            { device.brands.map( brand =>\r\n                                <span key={ brand.id }>\r\n                                    { brand.id === device1.brandId ? brand.name : '' }\r\n                                </span>\r\n                            ) }&nbsp;\r\n                            { device.types.map( type =>\r\n                                <span key={ type.id }>\r\n                                    { type.id === device1.typeId ? type.name : '' }\r\n                                </span>\r\n\r\n                            ) }<span> { device1.price } грн</span>\r\n                            &nbsp;{ device1.rating }\r\n                        </div>\r\n                        <Image width={ 18 } height={ 18 } src={ star } />\r\n                    </div>\r\n                </div>\r\n                <div className='mt-1'>{ device1.name }\r\n                </div>\r\n\r\n            </Card>\r\n        </Col >\r\n    );\r\n} );\r\n\r\nexport default DeviceItem;","C:\\Users\\MAYA\\PERN\\client\\src\\components\\modals\\createType.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\modals\\createBrand.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\modals\\createDevice.js",["115","116"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Button, Dropdown, Form, Row, Col } from \"react-bootstrap\";\r\nimport { Context } from \"../../index\";\r\nimport { createDevice, fetchBrands, fetchDevices, fetchTypes } from \"../../http/deviceAPI\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst CreateDevice = observer( ( { show, onHide } ) =>\r\n{\r\n    const { device } = useContext( Context )\r\n    const [ name, setName ] = useState( '' )\r\n    const [ price, setPrice ] = useState( 0 )\r\n    const [ file, setFile ] = useState( null )\r\n    const [ info, setInfo ] = useState( [] )\r\n\r\n    useEffect( () =>\r\n    {\r\n        fetchTypes().then( data => device.setTypes( data ) )\r\n        fetchBrands().then( data => device.setBrands( data ) )\r\n    }, [ show ] )//[show] обновляем бренды и типы при их добавлении перед товаром\r\n\r\n    const addInfo = () =>\r\n    {\r\n        setInfo( [ ...info, { title: '', description: '', number: Date.now() } ] )\r\n    }\r\n    const removeInfo = ( number ) =>\r\n    {\r\n        setInfo( info.filter( i => i.number !== number ) )\r\n    }\r\n    const changeInfo = ( key, value, number ) =>\r\n    {\r\n        setInfo( info.map( i => i.number === number ? { ...i, [ key ]: value } : i ) )\r\n    }\r\n\r\n    const selectFile = e =>\r\n    {\r\n        setFile( e.target.files[ 0 ] )\r\n    }\r\n\r\n    const addDevice = () =>\r\n    {\r\n        console.log( 'info', info )\r\n        const formData = new FormData()  \r\n        try\r\n        {\r\n            formData.append( 'name', name )\r\n            formData.append( 'price', `${ price }` )\r\n            formData.append( 'img', file )\r\n            formData.append( 'brandId', device.selectedBrand.id )\r\n            formData.append( 'typeId', device.selectedType.id )\r\n            formData.append( 'info', JSON.stringify( info ) )            \r\n            createDevice( formData ).then( data => onHide() )\r\n        } catch ( error )\r\n        {\r\n            alert( error )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={ show }\r\n            onHide={ onHide }\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Добавить устройство\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{ device.selectedType.name || \"Выберите тип\" }</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            { device.types.map( type =>\r\n                                <Dropdown.Item\r\n                                    onClick={ () => device.setSelectedType( type ) }\r\n                                    key={ type.id }\r\n                                >\r\n                                    { type.name }\r\n                                </Dropdown.Item>\r\n                            ) }\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{ device.selectedBrand.name || \"Выберите бренд\" }</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            { device.brands.map( brand =>\r\n                                <Dropdown.Item\r\n                                    onClick={ () => device.setSelectedBrand( brand ) }\r\n                                    key={ brand.id }\r\n                                >\r\n                                    { brand.name }\r\n                                </Dropdown.Item>\r\n                            ) }\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Form.Control\r\n                        value={ name }\r\n                        onChange={ e => setName( e.target.value ) }\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите название\"\r\n                    />\r\n                    <Form.Control\r\n                        value={ price }\r\n                        onChange={ e => setPrice( Number( e.target.value ) ) }\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите цену\"\r\n                    // type=\"number\"\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        type=\"file\"\r\n                        onChange={ selectFile }\r\n                    />\r\n                    <hr />\r\n                    <Button\r\n                        variant={ \"outline-dark\" }\r\n                        onClick={ addInfo }\r\n                    >\r\n                        Добавить новое свойство\r\n                    </Button>\r\n                    { info.map( i =>\r\n                        <Row className=\"mt-4\" key={ i.number }>\r\n                            <Col md={ 4 }>\r\n                                <Form.Control\r\n                                    value={ i.title }\r\n                                    onChange={ ( e ) => changeInfo( 'title', e.target.value, i.number ) }\r\n                                    placeholder=\"название свойства\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={ 4 }>\r\n                                <Form.Control\r\n                                    value={ i.description }\r\n                                    onChange={ ( e ) => changeInfo( 'description', e.target.value, i.number ) }\r\n                                    placeholder=\"описание свойства\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={ 4 }>\r\n                                <Button\r\n                                    onClick={ () => removeInfo( i.number ) }\r\n                                    variant={ \"outline-danger\" }\r\n                                >\r\n                                    Удалить\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    ) }\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={ onHide }>Закрыть</Button>\r\n                <Button variant=\"outline-success\" onClick={ addDevice }>Добавить</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n} );\r\n\r\nexport default CreateDevice;","C:\\Users\\MAYA\\PERN\\client\\src\\http\\userAPI.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\http\\index.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\http\\deviceAPI.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\Pages.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Main.js",["117"],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":52,"column":22,"nodeType":"124","endLine":52,"endColumn":23},{"ruleId":"122","severity":1,"message":"125","line":35,"column":8,"nodeType":"126","endLine":35,"endColumn":33,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":45,"column":5,"nodeType":"130","messageId":"131","endLine":49,"endColumn":6},{"ruleId":"122","severity":1,"message":"125","line":19,"column":8,"nodeType":"126","endLine":19,"endColumn":10,"suggestions":"132"},{"ruleId":"122","severity":1,"message":"133","line":28,"column":8,"nodeType":"126","endLine":28,"endColumn":10,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":22,"column":9,"nodeType":"137","messageId":"138","endLine":22,"endColumn":15},{"ruleId":"135","severity":1,"message":"139","line":5,"column":37,"nodeType":"137","messageId":"138","endLine":5,"endColumn":49},{"ruleId":"122","severity":1,"message":"125","line":20,"column":8,"nodeType":"126","endLine":20,"endColumn":16,"suggestions":"140"},{"ruleId":"122","severity":1,"message":"125","line":18,"column":8,"nodeType":"126","endLine":18,"endColumn":10,"suggestions":"141"},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"react-hooks/exhaustive-deps","Assignments to the 'string' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.","ArrayExpression",["144"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["145"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["146"],"no-unused-vars","'brands' is assigned a value but never used.","Identifier","unusedVar","'fetchDevices' is defined but never used.",["147"],["148"],"no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"151","fix":"157"},"Update the dependencies array to be: [device, device.selectedBasket]",{"range":"158","text":"159"},"Update the dependencies array to be: [device]",{"range":"160","text":"161"},"Update the dependencies array to be: [id]",{"range":"162","text":"163"},"Update the dependencies array to be: [device, show]",{"range":"164","text":"165"},{"range":"166","text":"161"},[906,931],"[device, device.selectedBasket]",[742,744],"[device]",[949,951],"[id]",[814,822],"[device, show]",[653,655]]