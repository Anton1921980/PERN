[{"C:\\Users\\MAYA\\PERN\\client\\src\\index.js":"1","C:\\Users\\MAYA\\PERN\\client\\src\\App.js":"2","C:\\Users\\MAYA\\PERN\\client\\src\\components\\AppRouter.js":"3","C:\\Users\\MAYA\\PERN\\client\\src\\routes.js":"4","C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Admin.js":"5","C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Shop.js":"6","C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Basket.js":"7","C:\\Users\\MAYA\\PERN\\client\\src\\utils\\consts.js":"8","C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Auth.js":"9","C:\\Users\\MAYA\\PERN\\client\\src\\pages\\DevicePage.js":"10","C:\\Users\\MAYA\\PERN\\client\\src\\store\\UserStore.js":"11","C:\\Users\\MAYA\\PERN\\client\\src\\store\\DeviceStore.js":"12","C:\\Users\\MAYA\\PERN\\client\\src\\components\\NavBar.js":"13","C:\\Users\\MAYA\\PERN\\client\\src\\components\\TypeBar.js":"14","C:\\Users\\MAYA\\PERN\\client\\src\\components\\BrandBar.js":"15","C:\\Users\\MAYA\\PERN\\client\\src\\components\\DeviceList.js":"16","C:\\Users\\MAYA\\PERN\\client\\src\\components\\DeviceItem.js":"17","C:\\Users\\MAYA\\PERN\\client\\src\\components\\modals\\createType.js":"18","C:\\Users\\MAYA\\PERN\\client\\src\\components\\modals\\createBrand.js":"19","C:\\Users\\MAYA\\PERN\\client\\src\\components\\modals\\createDevice.js":"20","C:\\Users\\MAYA\\PERN\\client\\src\\http\\userAPI.js":"21","C:\\Users\\MAYA\\PERN\\client\\src\\http\\index.js":"22","C:\\Users\\MAYA\\PERN\\client\\src\\http\\deviceAPI.js":"23","C:\\Users\\MAYA\\PERN\\client\\src\\components\\Pages.js":"24","C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Main.js":"25"},{"size":432,"mtime":1634577903900,"results":"26","hashOfConfig":"27"},{"size":859,"mtime":1635154289084,"results":"28","hashOfConfig":"27"},{"size":985,"mtime":1636217022107,"results":"29","hashOfConfig":"27"},{"size":893,"mtime":1635797793787,"results":"30","hashOfConfig":"27"},{"size":1707,"mtime":1635251649401,"results":"31","hashOfConfig":"27"},{"size":4662,"mtime":1636205830016,"results":"32","hashOfConfig":"27"},{"size":3148,"mtime":1636319610370,"results":"33","hashOfConfig":"27"},{"size":276,"mtime":1635798293307,"results":"34","hashOfConfig":"27"},{"size":3447,"mtime":1636200466287,"results":"35","hashOfConfig":"27"},{"size":4606,"mtime":1636303505921,"results":"36","hashOfConfig":"27"},{"size":838,"mtime":1635098787894,"results":"37","hashOfConfig":"27"},{"size":2810,"mtime":1636233979655,"results":"38","hashOfConfig":"27"},{"size":2880,"mtime":1636217083338,"results":"39","hashOfConfig":"27"},{"size":1745,"mtime":1636217120677,"results":"40","hashOfConfig":"27"},{"size":1652,"mtime":1636217051363,"results":"41","hashOfConfig":"27"},{"size":646,"mtime":1635321006641,"results":"42","hashOfConfig":"27"},{"size":2397,"mtime":1636200450998,"results":"43","hashOfConfig":"27"},{"size":1397,"mtime":1635106497228,"results":"44","hashOfConfig":"27"},{"size":1502,"mtime":1635252543110,"results":"45","hashOfConfig":"27"},{"size":6683,"mtime":1635839861130,"results":"46","hashOfConfig":"27"},{"size":713,"mtime":1635097010132,"results":"47","hashOfConfig":"27"},{"size":559,"mtime":1635158024728,"results":"48","hashOfConfig":"27"},{"size":1868,"mtime":1636316682512,"results":"49","hashOfConfig":"27"},{"size":909,"mtime":1635320943466,"results":"50","hashOfConfig":"27"},{"size":1433,"mtime":1635797819669,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"oj9i0j",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"54"},"C:\\Users\\MAYA\\PERN\\client\\src\\index.js",[],["110","111"],"C:\\Users\\MAYA\\PERN\\client\\src\\App.js",["112"],"import React, {useContext, useEffect, useState} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(true)\n            user.setIsAuth(true)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n    return (\n        <BrowserRouter>\n            <NavBar />\n            <AppRouter />\n        </BrowserRouter>\n    );\n});\n\nexport default App;","C:\\Users\\MAYA\\PERN\\client\\src\\components\\AppRouter.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\routes.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Admin.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Shop.js",["113","114","115","116","117","118","119","120","121"],"import React, { useContext, useEffect, useLayoutEffect, useState } from 'react';\r\nimport { Container } from \"react-bootstrap\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport TypeBar from \"../components/TypeBar\";\r\nimport BrandBar from \"../components/BrandBar\";\r\nimport DeviceList from \"../components/DeviceList\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Context } from \"../index\";\r\nimport { fetchBrands, fetchDevices, fetchTypes } from \"../http/deviceAPI\";\r\nimport Pages from \"../components/Pages\";\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport querystring from \"query-string\";\r\nimport { set } from 'mobx';\r\n\r\n\r\nconst Shop = observer( () =>\r\n{\r\n    const { device } = useContext( Context )\r\n    const history = useHistory()\r\n\r\n\r\n    const location = useLocation()\r\n    const path = location.search\r\n\r\n    // console.log( \"TCL: path\", path )\r\n\r\n    const queryString = require( \"query-string\" )\r\n    const parsed = queryString.parse( location.search )\r\n\r\n    // console.log( \"TCL: parsed\", parsed )\r\n\r\n    let linked = undefined;\r\n    let initial = undefined;\r\n    path && ( path.length > 16 ) ? linked = 1 : linked = undefined\r\n    linked === undefined ? initial = 1 : initial = undefined\r\n\r\n    // console.log( \"TCL: initial\", initial )\r\n    // console.log( \"TCL: linked\", linked )\r\n    // useEffect первая загрузка все товары или по query string в url\r\n    let string\r\n\r\n\r\n    useEffect( () =>\r\n    {\r\n        if ( linked === 1 )//загрузка по строке\r\n        {\r\n            string = 1          \r\n\r\n            fetchTypes().then( data =>\r\n            {\r\n                device.setTypes( data )\r\n                device.setSelectedType( { id: +parsed.types } )\r\n            } )\r\n\r\n            fetchBrands().then( data =>\r\n            {\r\n                device.setBrands( data )\r\n                device.setSelectedBrand( { id: +parsed.brands } )\r\n            } )\r\n\r\n            fetchDevices( parsed.types, parsed.brands, parsed.page, parsed.limit ).then( data =>\r\n            {\r\n                device.setDevices( data.rows )\r\n                device.setTotalCount( data.count )              \r\n            } )\r\n\r\n            console.log( 'device1:', device )\r\n        }\r\n\r\n\r\n        else//загрузка первичная\r\n        {\r\n            fetchTypes().then( data => device.setTypes( data ) )\r\n\r\n            fetchBrands().then( data => device.setBrands( data ) )\r\n\r\n            fetchDevices( null, null, device.page, device.limit ).then( data =>\r\n            {\r\n                device.setDevices( data.rows )\r\n                device.setTotalCount( data.count )\r\n            } )\r\n            console.log( 'device2:', device )\r\n        }\r\n    }, [] )\r\n\r\n    //пока аcинхронно грузятся отфильтрованые товары успевает второй useEffect отработать создать пустую строку\r\n    // useEffect для фильтров\r\n    useEffect( () =>\r\n    {\r\n        let type = \"\";\r\n        let brand = \"\";\r\n        if ( string !== 1 )\r\n        {\r\n            // device.selectedType.name && ( device.selectedType.name ).length > 0 ? type = `types=${ device.selectedType.name }` : type = ''\r\n            // device.selectedBrand.name && ( device.selectedBrand.name ).length > 0 ? brand = `&brands=${ device.selectedBrand.name }` : brand = ''\r\n\r\n            device.selectedType.id  ? type = `types=${ device.selectedType.id }` : type = ''\r\n            device.selectedBrand.id  ? brand = `&brands=${ device.selectedBrand.id }` : brand = ''\r\n\r\n            let query = `${ type }${ brand }&page=${ device.page }&limit=${ device.limit }`;\r\n            console.log( \"TCL: query\", query )\r\n\r\n            let push = history.push( `/shop/?${ query }` )\r\n\r\n            fetchDevices( device.selectedType.id, device.selectedBrand.id, device.page, device.limit ).then( data =>\r\n            {\r\n                device.setDevices( data.rows )\r\n                device.setTotalCount( data.count )\r\n\r\n                console.log( \"TCL: device3\", device );\r\n            } )\r\n        }\r\n    }, [ device.page, device.selectedType, device.selectedBrand ] )\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"mt-2\">\r\n                <Col md={ 3 }>\r\n                    <TypeBar seltype={ parsed.type } />\r\n                </Col>\r\n                <Col md={ 9 }>\r\n                    <BrandBar />\r\n                    <Pages />\r\n                    <DeviceList />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n} );\r\n\r\nexport default Shop;","C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Basket.js",["122","123","124","125","126"],"C:\\Users\\MAYA\\PERN\\client\\src\\utils\\consts.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Auth.js",["127"],"import React, { useContext, useState } from 'react';\r\nimport { Container, Form, Card, Button, Row } from \"react-bootstrap\";\r\nimport { NavLink, useLocation, useHistory } from \"react-router-dom\";\r\nimport { LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE } from \"../utils/consts\";\r\nimport { login, registration } from \"../http/userAPI\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Context } from \"../index\";\r\n\r\n\r\nconst Auth = observer( () =>\r\n{\r\n    const location = useLocation()\r\n    const { user } = useContext( Context )\r\n    let isLogin = ( location.pathname === LOGIN_ROUTE ) //без скобок не работает?\r\n    const history = useHistory()\r\n    const [ email, setEmail ] = useState( '' )\r\n    const [ password, setPassword ] = useState( '' )\r\n\r\n    const click = async () =>\r\n    {\r\n        try\r\n        {\r\n            let data;\r\n            if ( isLogin )\r\n            {\r\n                data = await login( email, password );\r\n            } else\r\n            {\r\n                data = await registration( email, password );\r\n            }\r\n            // user.setUser( user )\r\n           \r\n           user.setUser( data )\r\n           console.log(\"TCL: user\", user)\r\n\r\n            user.setIsAuth( true )\r\n            history.push( SHOP_ROUTE )\r\n        } catch ( e )\r\n        {\r\n            console.log( e.response.data.message )\r\n        }\r\n\r\n    }\r\n\r\n\r\n    console.log( \"TCL: isLogin\", isLogin )\r\n\r\n    return (\r\n        <Container\r\n            className='d-flex justify-content-center align-items-center'\r\n            style={ { height: window.innerHeight - 54 } }\r\n        >\r\n            <Card style={ { width: 600 } } className='p-5'>\r\n                <h2 className='m-auto'>{ isLogin ? 'Авторизация' : 'Регистрация' }</h2>\r\n                <Form className='d-flex flex-column'>\r\n                    <Form.Control\r\n                        className='mt-2'\r\n                        placeholder=\"Введите email\"\r\n                        value={ email }\r\n                        onChange={ e => setEmail( e.target.value ) }\r\n                        type='em'\r\n                    />\r\n                    <Form.Control\r\n                        className='mt-2'\r\n                        placeholder=\"Введите пароль\"\r\n                        value={ password }\r\n                        type='password'\r\n                        onChange={ e => setPassword( e.target.value ) }\r\n                    />\r\n                    <div className='d-flex justify-content-between mt-3 pl-3 pr-3'>\r\n                        { isLogin ?\r\n                            <div>\r\n                                Нет аккаунта?<NavLink to={ REGISTRATION_ROUTE }>Зарегистрируйтесь</NavLink>\r\n                            </div>\r\n                            :\r\n                            <div>\r\n                                Есть аккаунт?<NavLink to={ LOGIN_ROUTE }>Войти</NavLink>\r\n\r\n                            </div>\r\n                        }\r\n                        <Button\r\n                            variant={ \"outline-success\" }\r\n                            onClick={ click }\r\n                        >\r\n                            { isLogin ? 'Войти' : 'Регистрация' }\r\n                        </Button>\r\n                    </div>\r\n                </Form>\r\n            </Card>\r\n        </Container>\r\n    )\r\n} )\r\n\r\nexport default Auth\r\n","C:\\Users\\MAYA\\PERN\\client\\src\\pages\\DevicePage.js",["128","129"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Button, Card, Col, Container, Image, Row } from 'react-bootstrap';\r\nimport bigStar from '../assets/bigStar.png'\r\nimport { useParams } from 'react-router-dom';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Context } from '../index';\r\nimport { fetchBrands, fetchOneDevice, fetchTypes, addtoBasket } from '../http/deviceAPI';\r\n\r\n\r\nconst DevicePage = observer( () =>\r\n{\r\n    const { device } = useContext( Context )\r\n    console.log( \"TCL: device\", device )\r\n    useEffect( () =>\r\n    {\r\n        fetchTypes().then( data => device.setTypes( data ) )\r\n        fetchBrands().then( data => device.setBrands( data ) )\r\n        console.log( 'device:', device )\r\n    }, [] )\r\n\r\n\r\n    const [ device1, setdevice1 ] = useState( { info: [] } )\r\n    const { id } = useParams()\r\n\r\n    useEffect( () =>\r\n    {\r\n        fetchOneDevice( id ).then( data => setdevice1( data ) )\r\n    }, [] )\r\n\r\n    // const device1 = { id: 1, name: 'Iphone 12pro', price: 158566, rating: 5, img: 'https://content1.rozetka.com.ua/goods/images/big/173869349.jpg' }\r\n    // const description = [\r\n    //     { id: 1, title: 'Оперативная память', description: '5 gb' },\r\n    //     { id: 2, title: 'Камера', description: '48 mp' },\r\n    //     { id: 3, title: 'Процессор', description: '2 ghz' },\r\n    //     { id: 4, title: 'Аккумулятор', description: '4000 mah' },\r\n    // ]\r\n\r\n\r\n    //   функция для записи \r\n    const add = () =>\r\n    {\r\n        const formData = new FormData()\r\n        formData.append( 'deviceId', id )\r\n        addtoBasket( formData ).then( response => alert( `Товар ` + device.name + ` был добавлен в вашу корзину!` ) )\r\n    }\r\n    return (\r\n        <Container>\r\n            <Row className='mt-3'>\r\n                <Col md={ 6 }>\r\n                    <div style={ { width: 500, height: 400, overflow: 'hidden' } }>\r\n                        <Image style={ { objectFit: 'contain', width: '100%', height: '100%' } } src={ process.env.REACT_APP_API_URL + device1.img } />\r\n                    </div>\r\n                </Col>\r\n                <Col md={ 6 } >\r\n                    <div className='d-flex flex-column'>\r\n                        <h2>{ device1.name }&nbsp;\r\n                            <div style={{color:'lightgrey'}}>\r\n                                { device.brands.map( brand =>\r\n                                    <span key={ brand.id }>\r\n                                        { brand.id === device1.brandId ? brand.name : '' }\r\n                                    </span>\r\n                                ) }&nbsp;\r\n                                { device.types.map( type =>\r\n                                    <span key={ type.id }>\r\n                                        { type.id === device1.typeId ? type.name : '' }\r\n                                    </span>\r\n                                ) }\r\n                            </div>\r\n                        </h2>\r\n                        <div className='d-flex flex-row'>\r\n\r\n                            <Card className='d-flex flex-row align-items-center justify-content-around'\r\n                                style={ { width: '100%', height: 120, fontSize: 32, border: '1px solid lightgrey' } }\r\n                            >\r\n                                <div\r\n                                    className=\"d-flex align-items-center justify-content-center\"\r\n                                    style={ { background: `url(${ bigStar }) no-repeat center center`, width: 80, height: 80, backgroundSize: 'cover', fontSize: 24 } }\r\n                                >\r\n                                    { device1.rating }\r\n                                </div>\r\n                                <h3>{ device1.price } грн</h3>\r\n                                <Button variant={ \"outline-dark\" } onClick={ add } >Добавить в корзину</Button>\r\n                            </Card>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </Col>\r\n\r\n            </Row>\r\n            <Row className='d-flex flex-column m-3'>\r\n                <h1 >Характеристики:</h1>\r\n                { device1.info.map( ( info, index ) =>\r\n                    <Row key={ info.id } style={ { background: index % 2 === 0 ? 'lightgrey' : 'transparent', padding: 5 } }>\r\n                        { info.title }:{ info.description }\r\n                    </Row> ) }\r\n            </Row>\r\n        </Container>\r\n    )\r\n} )\r\n\r\nexport default DevicePage","C:\\Users\\MAYA\\PERN\\client\\src\\store\\UserStore.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\store\\DeviceStore.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\NavBar.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\TypeBar.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\BrandBar.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\DeviceList.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\DeviceItem.js",["130"],"import { observer } from 'mobx-react-lite';\r\nimport React, { useContext } from 'react';\r\nimport { Card, Col, Image } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Context } from '../index';\r\nimport star from '../assets/star.png'\r\nimport { DEVICE_ROUTE } from '../utils/consts';\r\n\r\n\r\n\r\n\r\nconst DeviceItem = observer( ( props ) =>\r\n{\r\n    //берем все бренды из стора и сравниваем бренд ид товара для получение названия бренда\r\n    const { device } = useContext( Context )\r\n    // console.log( \"TCL: device\", device )\r\n\r\n    const device1 = props.device\r\n    // console.log( \"TCL: device1\", device1 )\r\n\r\n    const history = useHistory()\r\n    let brands = device.brands\r\n    // console.log( \"TCL: brands\", brands )\r\n    // console.log( \"TCL: history\", history )\r\n    // console.log( \"TCL: DEVICE_ROUTE\", DEVICE_ROUTE )\r\n\r\n    return (\r\n        <Col className='mt-3' md={ 4 } onClick={ () => history.push( DEVICE_ROUTE + '/' + device1.id ) }>\r\n            <Card style={ { width: 250, height: 400, cursor: 'pointer' } } border={ 'light' }>\r\n                <div style={ { width: 250, height: 250, overflow: 'hidden' } }>\r\n                    <Image style={ { objectFit: 'contain', width: '100%', height: '100%' } }\r\n                        src={ process.env.REACT_APP_API_URL + device1.img } />\r\n                </div>\r\n                <div className=\"text-black-50 mt-1 d-flex justify-content-between align-items-center\">\r\n                    <div className='d-flex align-items-center'>\r\n                        <div>{ device1.rating }</div>\r\n                        <Image width={ 18 } height={ 18 } src={ star } />\r\n                    </div>\r\n                </div>\r\n                <div>{ device1.name }&nbsp;\r\n                    { device.brands.map( brand =>\r\n                        <span key={ brand.id }>\r\n                            { brand.id === device1.brandId ? brand.name : '' }\r\n                        </span>\r\n                    ) }&nbsp;\r\n                    { device.types.map( type =>\r\n                        <span key={ type.id }>\r\n                            { type.id === device1.typeId ? type.name : '' }\r\n                        </span>\r\n                    ) }\r\n                </div>\r\n            </Card>\r\n        </Col >\r\n    );\r\n} );\r\n\r\nexport default DeviceItem;","C:\\Users\\MAYA\\PERN\\client\\src\\components\\modals\\createType.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\modals\\createBrand.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\modals\\createDevice.js",["131","132"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Button, Dropdown, Form, Row, Col } from \"react-bootstrap\";\r\nimport { Context } from \"../../index\";\r\nimport { createDevice, fetchBrands, fetchDevices, fetchTypes } from \"../../http/deviceAPI\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst CreateDevice = observer( ( { show, onHide } ) =>\r\n{\r\n    const { device } = useContext( Context )\r\n    const [ name, setName ] = useState( '' )\r\n    const [ price, setPrice ] = useState( 0 )\r\n    const [ file, setFile ] = useState( null )\r\n    const [ info, setInfo ] = useState( [] )\r\n\r\n    useEffect( () =>\r\n    {\r\n        fetchTypes().then( data => device.setTypes( data ) )\r\n        fetchBrands().then( data => device.setBrands( data ) )\r\n    }, [ show ] )//[show] обновляем бренды и типы при их добавлении перед товаром\r\n\r\n    const addInfo = () =>\r\n    {\r\n        setInfo( [ ...info, { title: '', description: '', number: Date.now() } ] )\r\n    }\r\n    const removeInfo = ( number ) =>\r\n    {\r\n        setInfo( info.filter( i => i.number !== number ) )\r\n    }\r\n    const changeInfo = ( key, value, number ) =>\r\n    {\r\n        setInfo( info.map( i => i.number === number ? { ...i, [ key ]: value } : i ) )\r\n    }\r\n\r\n    const selectFile = e =>\r\n    {\r\n        setFile( e.target.files[ 0 ] )\r\n    }\r\n\r\n    const addDevice = () =>\r\n    {\r\n        console.log( 'info', info )\r\n        const formData = new FormData()  \r\n        try\r\n        {\r\n            formData.append( 'name', name )\r\n            formData.append( 'price', `${ price }` )\r\n            formData.append( 'img', file )\r\n            formData.append( 'brandId', device.selectedBrand.id )\r\n            formData.append( 'typeId', device.selectedType.id )\r\n            formData.append( 'info', JSON.stringify( info ) )            \r\n            createDevice( formData ).then( data => onHide() )\r\n        } catch ( error )\r\n        {\r\n            alert( error )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={ show }\r\n            onHide={ onHide }\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Добавить устройство\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{ device.selectedType.name || \"Выберите тип\" }</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            { device.types.map( type =>\r\n                                <Dropdown.Item\r\n                                    onClick={ () => device.setSelectedType( type ) }\r\n                                    key={ type.id }\r\n                                >\r\n                                    { type.name }\r\n                                </Dropdown.Item>\r\n                            ) }\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{ device.selectedBrand.name || \"Выберите бренд\" }</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            { device.brands.map( brand =>\r\n                                <Dropdown.Item\r\n                                    onClick={ () => device.setSelectedBrand( brand ) }\r\n                                    key={ brand.id }\r\n                                >\r\n                                    { brand.name }\r\n                                </Dropdown.Item>\r\n                            ) }\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Form.Control\r\n                        value={ name }\r\n                        onChange={ e => setName( e.target.value ) }\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите название\"\r\n                    />\r\n                    <Form.Control\r\n                        value={ price }\r\n                        onChange={ e => setPrice( Number( e.target.value ) ) }\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите цену\"\r\n                    // type=\"number\"\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        type=\"file\"\r\n                        onChange={ selectFile }\r\n                    />\r\n                    <hr />\r\n                    <Button\r\n                        variant={ \"outline-dark\" }\r\n                        onClick={ addInfo }\r\n                    >\r\n                        Добавить новое свойство\r\n                    </Button>\r\n                    { info.map( i =>\r\n                        <Row className=\"mt-4\" key={ i.number }>\r\n                            <Col md={ 4 }>\r\n                                <Form.Control\r\n                                    value={ i.title }\r\n                                    onChange={ ( e ) => changeInfo( 'title', e.target.value, i.number ) }\r\n                                    placeholder=\"название свойства\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={ 4 }>\r\n                                <Form.Control\r\n                                    value={ i.description }\r\n                                    onChange={ ( e ) => changeInfo( 'description', e.target.value, i.number ) }\r\n                                    placeholder=\"описание свойства\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={ 4 }>\r\n                                <Button\r\n                                    onClick={ () => removeInfo( i.number ) }\r\n                                    variant={ \"outline-danger\" }\r\n                                >\r\n                                    Удалить\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    ) }\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={ onHide }>Закрыть</Button>\r\n                <Button variant=\"outline-success\" onClick={ addDevice }>Добавить</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n} );\r\n\r\nexport default CreateDevice;","C:\\Users\\MAYA\\PERN\\client\\src\\http\\userAPI.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\http\\index.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\http\\deviceAPI.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\components\\Pages.js",[],"C:\\Users\\MAYA\\PERN\\client\\src\\pages\\Main.js",["133","134","135","136","137","138","139","140","141","142","143"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Button, Card, Col, Container, Image, Row } from 'react-bootstrap';\r\nimport bigStar from '../assets/bigStar.png'\r\nimport { useParams } from 'react-router-dom';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Context } from '../index';\r\nimport { fetchBrands, fetchOneDevice, fetchTypes,addtoBasket } from '../http/deviceAPI';\r\n\r\n\r\nconst Main = observer(() =>\r\n{\r\n    const { device } = useContext( Context )\r\n    console.log(\"TCL: device\", device)\r\n    useEffect(() => {\r\n        fetchTypes().then(data => device.setTypes(data))\r\n        fetchBrands().then(data => device.setBrands(data))\r\n        console.log('device:',device)\r\n    }, [])\r\n\r\n   \r\n\r\n   \r\n\r\n    // const device1 = { id: 1, name: 'Iphone 12pro', price: 158566, rating: 5, img: 'https://content1.rozetka.com.ua/goods/images/big/173869349.jpg' }\r\n    // const description = [\r\n    //     { id: 1, title: 'Оперативная память', description: '5 gb' },\r\n    //     { id: 2, title: 'Камера', description: '48 mp' },\r\n    //     { id: 3, title: 'Процессор', description: '2 ghz' },\r\n    //     { id: 4, title: 'Аккумулятор', description: '4000 mah' },\r\n    // ]\r\n\r\n\r\n    //  Создаём функцию для записи \r\n   \r\n    return (\r\n        <Container>\r\n           <div>MAIN PAGE</div>\r\n        </Container>\r\n    )\r\n})\r\n\r\nexport default Main",{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":19,"column":8,"nodeType":"150","endLine":19,"endColumn":10,"suggestions":"151"},{"ruleId":"152","severity":1,"message":"153","line":1,"column":40,"nodeType":"154","messageId":"155","endLine":1,"endColumn":55},{"ruleId":"152","severity":1,"message":"156","line":1,"column":57,"nodeType":"154","messageId":"155","endLine":1,"endColumn":65},{"ruleId":"152","severity":1,"message":"157","line":12,"column":35,"nodeType":"154","messageId":"155","endLine":12,"endColumn":44},{"ruleId":"152","severity":1,"message":"158","line":13,"column":8,"nodeType":"154","messageId":"155","endLine":13,"endColumn":19},{"ruleId":"152","severity":1,"message":"159","line":14,"column":10,"nodeType":"154","messageId":"155","endLine":14,"endColumn":13},{"ruleId":"152","severity":1,"message":"160","line":36,"column":42,"nodeType":"154","messageId":"155","endLine":36,"endColumn":49},{"ruleId":"148","severity":1,"message":"161","line":48,"column":22,"nodeType":"162","endLine":48,"endColumn":23},{"ruleId":"152","severity":1,"message":"163","line":104,"column":17,"nodeType":"154","messageId":"155","endLine":104,"endColumn":21},{"ruleId":"148","severity":1,"message":"164","line":114,"column":8,"nodeType":"150","endLine":114,"endColumn":66,"suggestions":"165"},{"ruleId":"152","severity":1,"message":"166","line":9,"column":8,"nodeType":"154","messageId":"155","endLine":9,"endColumn":13},{"ruleId":"148","severity":1,"message":"167","line":20,"column":8,"nodeType":"150","endLine":20,"endColumn":10,"suggestions":"168"},{"ruleId":"148","severity":1,"message":"167","line":35,"column":8,"nodeType":"150","endLine":35,"endColumn":33,"suggestions":"169"},{"ruleId":"170","severity":1,"message":"171","line":45,"column":5,"nodeType":"172","messageId":"173","endLine":49,"endColumn":6},{"ruleId":"174","severity":1,"message":"175","line":60,"column":29,"nodeType":"176","endLine":60,"endColumn":109},{"ruleId":"152","severity":1,"message":"177","line":2,"column":41,"nodeType":"154","messageId":"155","endLine":2,"endColumn":44},{"ruleId":"148","severity":1,"message":"167","line":19,"column":8,"nodeType":"150","endLine":19,"endColumn":10,"suggestions":"178"},{"ruleId":"148","severity":1,"message":"179","line":28,"column":8,"nodeType":"150","endLine":28,"endColumn":10,"suggestions":"180"},{"ruleId":"152","severity":1,"message":"181","line":22,"column":9,"nodeType":"154","messageId":"155","endLine":22,"endColumn":15},{"ruleId":"152","severity":1,"message":"182","line":5,"column":37,"nodeType":"154","messageId":"155","endLine":5,"endColumn":49},{"ruleId":"148","severity":1,"message":"167","line":20,"column":8,"nodeType":"150","endLine":20,"endColumn":16,"suggestions":"183"},{"ruleId":"152","severity":1,"message":"156","line":1,"column":40,"nodeType":"154","messageId":"155","endLine":1,"endColumn":48},{"ruleId":"152","severity":1,"message":"184","line":2,"column":10,"nodeType":"154","messageId":"155","endLine":2,"endColumn":16},{"ruleId":"152","severity":1,"message":"185","line":2,"column":18,"nodeType":"154","messageId":"155","endLine":2,"endColumn":22},{"ruleId":"152","severity":1,"message":"186","line":2,"column":24,"nodeType":"154","messageId":"155","endLine":2,"endColumn":27},{"ruleId":"152","severity":1,"message":"187","line":2,"column":40,"nodeType":"154","messageId":"155","endLine":2,"endColumn":45},{"ruleId":"152","severity":1,"message":"177","line":2,"column":47,"nodeType":"154","messageId":"155","endLine":2,"endColumn":50},{"ruleId":"152","severity":1,"message":"188","line":3,"column":8,"nodeType":"154","messageId":"155","endLine":3,"endColumn":15},{"ruleId":"152","severity":1,"message":"157","line":4,"column":10,"nodeType":"154","messageId":"155","endLine":4,"endColumn":19},{"ruleId":"152","severity":1,"message":"189","line":7,"column":23,"nodeType":"154","messageId":"155","endLine":7,"endColumn":37},{"ruleId":"152","severity":1,"message":"190","line":7,"column":50,"nodeType":"154","messageId":"155","endLine":7,"endColumn":61},{"ruleId":"148","severity":1,"message":"167","line":18,"column":8,"nodeType":"150","endLine":18,"endColumn":10,"suggestions":"191"},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["194"],"no-unused-vars","'useLayoutEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useParams' is defined but never used.","'querystring' is defined but never used.","'set' is defined but never used.","'initial' is assigned a value but never used.","Assignments to the 'string' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'push' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'device', 'history', and 'string'. Either include them or remove the dependency array.",["195"],"'close' is defined but never used.","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["196"],["197"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Row' is defined but never used.",["198"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["199"],"'brands' is assigned a value but never used.","'fetchDevices' is defined but never used.",["200"],"'Button' is defined but never used.","'Card' is defined but never used.","'Col' is defined but never used.","'Image' is defined but never used.","'bigStar' is defined but never used.","'fetchOneDevice' is defined but never used.","'addtoBasket' is defined but never used.",["201"],"no-global-assign","no-unsafe-negation",{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"206","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"206","fix":"215"},"Update the dependencies array to be: [user]",{"range":"216","text":"217"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, string, device, history]",{"range":"218","text":"219"},"Update the dependencies array to be: [device]",{"range":"220","text":"221"},"Update the dependencies array to be: [device, device.selectedBasket]",{"range":"222","text":"223"},{"range":"224","text":"221"},"Update the dependencies array to be: [id]",{"range":"225","text":"226"},"Update the dependencies array to be: [device, show]",{"range":"227","text":"228"},{"range":"229","text":"221"},[641,643],"[user]",[4014,4072],"[device.page, device.selectedType, device.selectedBrand, string, device, history]",[564,566],"[device]",[897,922],"[device, device.selectedBasket]",[742,744],[949,951],"[id]",[814,822],"[device, show]",[715,717]]